{"version":3,"sources":["pages/modals/modal.tsx","pages/modals/message-dialog.tsx","custom-hooks/authorize-provider.tsx","constant.ts","processors/session-manager.tsx","endpoints.ts","processors/base.ts","processors/security-process.ts","processors/user-process.ts","pages/components/custom-textbox.tsx","pages/login-page.tsx","pages/components/pagination.tsx","pages/components/seachbar.tsx","pages/components/users-components/user-item.tsx","processors/personnel-process.ts","processors/role-process.ts","pages/components/custom-check-box-button.tsx","pages/components/custom-dropdown.tsx","processors/module-process.ts","pages/components/custom-check-box.tsx","pages/components/role-components/module-item-selection.tsx","pages/components/role-components/module-selection.tsx","pages/modals/manage-role.tsx","pages/modals/manage-user.tsx","pages/user-page.tsx","routes.ts","processors/concern-process.ts","pages/components/concerns-components/concern-item.tsx","pages/components/concerns-components/concern-items.tsx","pages/modals/assign-concern.tsx","processors/personnel-concern-process.tsx","pages/components/concerns-components/concern-action.tsx","pages/modals/concern-actions-viewer.tsx","processors/classification-process.ts","processors/office-process.ts","pages/components/custom-textarea.tsx","pages/modals/manage-concern.tsx","pages/concern-page.tsx","pages/modals/manage-profile.tsx","pages/components/role-components/role-item.tsx","pages/components/role-components/role-items.tsx","pages/role-page.tsx","pages/components/tickets-components/direct-concern-item.tsx","pages/components/tickets-components/direct-concern-items.tsx","pages/modals/forward-concern.tsx","pages/modals/resolve-concern.tsx","pages/ticket-page.tsx","pages/components/classification-components/classification-item.tsx","pages/components/classification-components/classification-items.tsx","pages/modals/manage-classification.tsx","pages/classification-page.tsx","pages/components/personnel-components/personnel-item.tsx","pages/components/personnel-components/personnel-items.tsx","pages/modals/manage-personnel.tsx","pages/personnel-page.tsx","pages/components/office-components/office-item.tsx","pages/components/office-components/office-items.tsx","pages/modals/manage-office.tsx","pages/office-page.tsx","pages/dashboard.tsx","helpers.ts","pages/components/concerns-components/concern-detail.tsx","pages/modals/detailed-summary.tsx","pages/summary-page.tsx","pages/home-page.tsx","App.tsx","index.tsx"],"names":["Modal","title","className","onClose","children","useEffect","document","body","classList","add","remove","ReactDOM","createPortal","undefined","icon","faTimes","onClick","getElementById","MessageDialog","closeDialog","useContext","SetCloseMessageDialogContext","Message","MessageContext","updateAuthorize","useUpdateAuthorize","ref","useRef","current","focus","message","onOk","action","API","window","location","protocol","process","APP_SECRET","ConcernStatus","PersonnelConcernStatus","CryptoJS","require","token_add","profile_add","encrypt","data","AES","toString","decrypt","enc","Utf8","saveToken","auth","token","refreshToken","sessionStorage","setItem","JSON","stringify","clearToken","removeItem","getToken","parse","getItem","saveProfile","profile","trimmed","username","admin","personnel","distinctModules","AuthorizeContext","React","createContext","UserProfileContext","SetMessageContext","OpenMessageDialogContext","UpdateAuthorizeContext","SetBusyContext","UpdateUserProfileContext","useUserProfile","useSetMessage","useSetBusy","useUpdateUserProfile","AuthorizeProvider","useState","authorize","setAuthorize","getProfile","userProfile","setUserProfile","openMessageDialog","setOpenMessageDialog","setMessage","showLoading","setShowLoading","Provider","value","isBusy","b","clear","SecurityEnd","UserEnd","ModuleEnd","RoleEnd","ConcernEnd","ClassificationEnd","OfficeEnd","PersonnelEnd","PersonnelConcernEnd","Hub","httpGet","url","a","Error","axios","get","headers","Authorization","baseURL","then","res","status","catch","err","response","refreshTokenAuthentication","httpPost","param","post","httpPut","put","httpDelete","delete","httpAuthenticatingPost","request","authenticate","params","getUserData","name","page","parameters","encodeURI","activateUsers","id","resetUserPassword","deleteUser","createUser","user","roleIds","updateUser","newRoleIds","accessToDelete","updateProfile","CustomTextBox","type","readonly","onChange","onKeyPress","toggle","setToggle","htmlFor","e","elementName","target","faEye","faEyeSlash","prev","LoginPage","password","setUser","setBusy","signIn","finally","onTextChange","key","Pagination","pages","currentPageNumber","goInPage","currentPage","setCurrentPage","canGoFirst","setGoFirst","canGoBefore","setGoBefore","canGoAfter","setGoAfter","canGoLast","setGoLast","pageList","setPageList","pl","i","push","faAngleDoubleLeft","faAngleLeft","cp","map","faAngleRight","faAngleDoubleRight","SeachBar","search","searchKey","setSearchKey","placeholder","val","faSearch","UserItem","classification","description","userRoles","length","x","role","join","active","getPersonnels","getAvailablePersonnelsByClassification","classificationId","createPersonnel","updatePersonnel","getRoles","createRole","moduleIds","updateRole","newModuleIds","CustomCheckBoxButton","isCheck","CustomDropdown","itemsList","find","item","selected","getModules","CustomCheckBox","checkChange","text","checked","ModuleItemSelection","module","RoleManagementActions","viewOnly","payload","ModuleSelection","modules","Modules","ManageRole","selectedRole","accesses","setRole","setModules","fetchModules","filter","accessId","resMod","mod","acc","moduleId","initializeComponents","r","ManageUser","usersInfo","personnelItem","setPersonnelItem","personnels","setPersonnels","personnelId","roles","setRoles","roleItems","setRoleItems","setUserRoles","showModal","setShowModal","setSelectedRole","fetchPersonnels","fetchRoles","roleId","deleted","userId","prevUser","u","faUndo","undoDeleteRole","faTrash","deleteRole","viewRole","UserPage","setName","users","setUsers","pageCount","setPageCount","selectedUser","setSelectedUser","userAction","resetPassword","deleteSelectedUser","userid","searchUser","searchUsers","results","colSpan","needToReload","Routes","searchConcerns","assigned","closed","createConcern","concern","updateConcern","deleteConcern","assignConcern","ConcernItem","ConcernActions","entryDate","Date","toLocaleString","number","office","caller","closedDate","statusId","ConcernItems","concerns","ConcernList","style","width","AssignConcern","availabelPersonnelItem","setAvailabelPersonnelItem","selectedPersonnel","setSelectedPersonnel","selectedAvailablePersonnel","setSelectedAvailablePersonnel","fetchAvailablePersonnels","getDirectConcerns","isResolve","isForwarded","isPending","getActions","concernId","resolvePersonnelConcern","actionTaken","forwardPersonnelConcern","reason","getTicketSummary","month","year","getDetailedSummary","day","ConcernAction","prevPersonnelConcernId","receivedDate","creator","ConcernActionsViewer","personnelConcern","setPersonnelConcern","fetchActions","getClassifications","createClassification","updateClassification","getOffices","createOffice","updateOffice","CustomTextArea","lineCount","rows","ManageConcern","selectedConcern","officeId","setConcern","classifications","setClassifications","offices","setOffices","classificationItem","setClassificationItem","officeItem","setOfficeItem","fetchClassifications","fetchOffices","prevConcern","ConcernPage","setKey","setConcerns","showAssignmentModal","setShowAssignmentModal","showActionsModal","setShowActionsModal","setSelectedConcern","setAssigned","setClosed","connection","setConnection","hasChanges","console","log","state","reconnect","invoke","searchConcern","conn","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","on","Notification","ticketnumber","start","HubConnectionState","Connected","Disconnected","pageNumber","isAssigned","isClosed","requestPermission","connect","deleteSelectedConcern","ManageProfile","updateProfileInfo","newPassword","confirmNewPassword","RoleItem","RoleActions","RoleItems","RoleList","RolePage","setViewOnly","searchRole","searchRoles","DirectConcernItem","DirectConcernActions","prevPersonnelConcern","DirectConcernItems","DirectConcernList","ForwardConcern","setReason","ResolveConcern","setActionTaken","TicketPage","directConcerns","setDirectConcerns","selectedDirectConcern","setSelectedDirectConcern","showResolveModal","setShowResolveModal","showForwardModal","setShowForwardModal","pending","setPending","resolved","setResolved","forwarded","setForwarded","fetchDirectConcern","isResolved","ClassificationItem","ClassificationActions","ClassificationItems","ClassificationList","ManageClassification","selectedClassification","setClassification","ClassificationPage","setSelectedClassification","searchClassification","searchClassifications","PersonnelItem","PersonnelActions","PersonnelItems","PersonnelList","ManagePersonnel","setPersonnel","OfficePage","searchPersonnel","searchPersonnels","OfficeItem","OfficeActions","abbreviation","OfficeItems","OfficeList","ManageOffice","selectedOffice","setOffice","setSelectedOffice","searchOffice","searchOffices","Dashboard","addDays","date","days","result","setDate","getDate","addMonths","months","setMonth","getMonth","getLastDateOfMonth","getFirstDateOfMonth","ConcernDetail","DetailedSummary","fetchDetailedSummary","getFullYear","SummaryPage","currentDate","setCurrentDate","dates","setDates","selectedDate","setSelectedDate","firstDate","lastDate","firstDay","getDay","last","_dates","sum","toDateString","summary","monthName","Intl","DateTimeFormat","format","noOfResolved","noOfForwarded","HomePage","showProfile","setShowProfile","menus","useMemo","head","navs","route","header","to","exact","menu","nav","path","component","PersonnelPage","App","render","StrictMode"],"mappings":"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","file":"static/js/main.12f7eb5f.chunk.js","sourcesContent":["import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { ReactNode, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nexport default function Modal({\r\n  title,\r\n  className,\r\n  onClose,\r\n  children,\r\n}: {\r\n  title?: String | undefined;\r\n  className?: String | undefined;\r\n  onClose?: (() => void) | undefined;\r\n  children: ReactNode;\r\n}) {\r\n  useEffect(() => {\r\n    document.body.classList.add('body-modal');\r\n\r\n    return () => {\r\n      document.body.classList.remove('body-modal');\r\n    };\r\n  });\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className='modal-container'>\r\n        <div className='modal-blocker'></div>\r\n        <div className={'modal-content ' + className}>\r\n          <div className='modal-content-header'>\r\n            <div className='header-text'>{title}</div>\r\n            {onClose !== undefined && (\r\n              <FontAwesomeIcon\r\n                className='close-icon'\r\n                icon={faTimes as IconProp}\r\n                onClick={onClose}\r\n              />\r\n            )}\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>,\r\n    document.getElementById('modal') as HTMLElement\r\n  );\r\n}\r\n","import { useEffect, useRef } from 'react';\r\nimport {\r\n  useMessage,\r\n  useSetCloseMessageDialog,\r\n  useUpdateAuthorize,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport Modal from './modal';\r\n\r\nexport default function MessageDialog() {\r\n  const closeDialog = useSetCloseMessageDialog();\r\n  const Message = useMessage();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n  const ref = useRef<HTMLButtonElement>(null);\r\n\r\n  function handleClose() {\r\n    closeDialog();\r\n  }\r\n\r\n  function ok() {\r\n    if (Message?.message === 'Unauthorized') updateAuthorize(false);\r\n    closeDialog();\r\n    Message?.onOk?.();\r\n  }\r\n  useEffect(\r\n    () => {\r\n      ref?.current?.focus();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Modal>\r\n      <div className='modal-content-body'>\r\n        <p>{Message?.message}</p>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={ok} className='btn-modal btn-primary' ref={ref}>\r\n          {(Message?.action === undefined ||\r\n            Message?.action === 'OKCANCEL') && <span>OK</span>}\r\n          {Message?.action === 'YESNO' && <span>YES</span>}\r\n        </button>\r\n        {Message?.action && (\r\n          <button onClick={handleClose} className='btn-modal btn-secondary '>\r\n            {Message?.action === 'OKCANCEL' && <span>CANCEL</span>}\r\n            {Message?.action === 'YESNO' && <span>NO</span>}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useContext, ReactNode, useState } from 'react';\r\nimport { Profile } from '../entities/user/Profile';\r\nimport MessageDialog from '../pages/modals/message-dialog';\r\nimport {\r\n  clearSession,\r\n  getProfile,\r\n  getToken,\r\n} from '../processors/session-manager';\r\n\r\nconst AuthorizeContext = React.createContext<boolean>(false);\r\nconst UserProfileContext = React.createContext<Profile | undefined>(undefined);\r\nconst SetMessageContext = React.createContext<(message: Message) => void>(\r\n  () => {}\r\n);\r\nconst SetCloseMessageDialogContext = React.createContext<() => void>(() => {});\r\nconst MessageContext = React.createContext<Message | undefined>(undefined);\r\nconst OpenMessageDialogContext = React.createContext<boolean>(false);\r\nconst UpdateAuthorizeContext = React.createContext<\r\n  (authorize: boolean) => void\r\n>(() => {});\r\nconst SetBusyContext = React.createContext<(args: boolean) => void>(() => {});\r\nconst UpdateUserProfileContext = React.createContext<\r\n  (args: Profile | undefined) => void\r\n>(() => {});\r\nexport interface Message {\r\n  message: any;\r\n  type?: MESSAGETYPE | undefined;\r\n  action?: MESSAGEACTION | undefined;\r\n  onOk?: () => void;\r\n}\r\nexport type MESSAGETYPE = 'MESSAGE' | 'ALERT';\r\nexport type MESSAGEACTION = 'YESNO' | 'OKCANCEL';\r\nexport function useSetCloseMessageDialog() {\r\n  return useContext(SetCloseMessageDialogContext);\r\n}\r\nexport function useAuthorize() {\r\n  return useContext(AuthorizeContext);\r\n}\r\nexport function useUserProfile() {\r\n  return useContext(UserProfileContext);\r\n}\r\nexport function useUpdateAuthorize() {\r\n  return useContext(UpdateAuthorizeContext);\r\n}\r\nexport function useSetMessage() {\r\n  return useContext(SetMessageContext);\r\n}\r\nexport function useMessage() {\r\n  return useContext(MessageContext);\r\n}\r\nexport function useOpenMessageDialog() {\r\n  return useContext(OpenMessageDialogContext);\r\n}\r\nexport function useSetBusy() {\r\n  return useContext(SetBusyContext);\r\n}\r\nexport function useUpdateUserProfile() {\r\n  return useContext(UpdateUserProfileContext);\r\n}\r\nexport function AuthorizeProvider({ children }: { children: ReactNode }) {\r\n  const [authorize, setAuthorize] = useState(() => {\r\n    const token = getToken();\r\n    return token?.token !== undefined;\r\n  });\r\n  const [userProfile, setUserProfile] = useState<Profile | undefined>(() => {\r\n    return getProfile();\r\n  });\r\n  const [openMessageDialog, setOpenMessageDialog] = useState<boolean>(false);\r\n  const [message, setMessage] = useState<Message>();\r\n  const [showLoading, setShowLoading] = useState<number>(() => 0);\r\n  function updateProfile(profile: Profile | undefined) {\r\n    setUserProfile(profile);\r\n  }\r\n  function updateAuthorize(authorize: boolean) {\r\n    if (!authorize) {\r\n      clearSession();\r\n      setUserProfile(undefined);\r\n    }\r\n    setAuthorize(authorize);\r\n  }\r\n  function showMessage(message: Message) {\r\n    setMessage(message);\r\n    setOpenMessageDialog(true);\r\n  }\r\n  function closeMessageDilaog() {\r\n    setOpenMessageDialog(false);\r\n  }\r\n  function setBusy(isBusy: boolean) {\r\n    setShowLoading((b) => b + (isBusy ? 1 : -1));\r\n    if (showLoading + (isBusy ? 1 : -1) === 1) {\r\n      document.body.classList.add('body-modal');\r\n    } else {\r\n      document.body.classList.remove('body-modal');\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className={\r\n          'loading-screen' + (showLoading > 0 ? ' loading-block' : '')\r\n        }>\r\n        <div className='loading-blocker'></div>\r\n        <div className='loading'>\r\n          <label> Please Wait</label>\r\n        </div>\r\n      </div>\r\n      <SetBusyContext.Provider value={setBusy}>\r\n        <OpenMessageDialogContext.Provider value={openMessageDialog}>\r\n          <SetCloseMessageDialogContext.Provider value={closeMessageDilaog}>\r\n            <MessageContext.Provider value={message}>\r\n              <SetMessageContext.Provider value={showMessage}>\r\n                <AuthorizeContext.Provider value={authorize}>\r\n                  <UpdateAuthorizeContext.Provider value={updateAuthorize}>\r\n                    <UserProfileContext.Provider value={userProfile}>\r\n                      <UpdateUserProfileContext.Provider value={updateProfile}>\r\n                        {children}\r\n                        {openMessageDialog && <MessageDialog />}\r\n                      </UpdateUserProfileContext.Provider>\r\n                    </UserProfileContext.Provider>\r\n                  </UpdateAuthorizeContext.Provider>\r\n                </AuthorizeContext.Provider>\r\n              </SetMessageContext.Provider>\r\n            </MessageContext.Provider>\r\n          </SetCloseMessageDialogContext.Provider>\r\n        </OpenMessageDialogContext.Provider>\r\n      </SetBusyContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n","export const API =\r\n  process.env.NODE_ENV === 'development'\r\n    ? process.env.REACT_APP_DEV\r\n    : window.location.protocol === 'http:'\r\n    ? process.env.REACT_APP_PROD\r\n    : process.env.REACT_APP_SECURED_PROD;\r\nexport const ICON = 'TICKETING SYSTEM';\r\nexport const APP_SECRET = process.env.REACT_APP_SECRET_KEY;\r\nexport const ConcernStatus = {\r\n  Open: 1,\r\n  Assign: 2,\r\n  Close: 3,\r\n};\r\nexport const PersonnelConcernStatus = {\r\n  Pending: 1,\r\n  Resolved: 2,\r\n  Forwarded: 3,\r\n};\r\n","import { Profile } from '../entities/user/Profile';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { APP_SECRET } from '../constant';\r\n\r\nvar CryptoJS = require('crypto-js');\r\nconst token_add = '--pxx--';\r\nconst profile_add = '--pxx-xdx--';\r\nconst current_voter = '--pxx-xvx--';\r\n\r\nfunction encrypt(data: string): string {\r\n  return CryptoJS.AES.encrypt(data, APP_SECRET).toString();\r\n}\r\nfunction decrypt(data: string): string {\r\n  return CryptoJS.AES.decrypt(data, APP_SECRET).toString(CryptoJS.enc.Utf8);\r\n}\r\n\r\nexport function saveToken(auth: Authentication) {\r\n  if (auth.token !== undefined && auth.refreshToken !== undefined) {\r\n    sessionStorage.setItem(token_add, encrypt(JSON.stringify(auth)));\r\n  }\r\n}\r\n\r\nexport function clearToken() {\r\n  sessionStorage.removeItem(token_add);\r\n}\r\n\r\nexport function getToken(): Authentication | undefined {\r\n  try {\r\n    return JSON.parse(decrypt(sessionStorage.getItem(token_add) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function getProfile(): Profile | undefined {\r\n  try {\r\n    return JSON.parse(decrypt(sessionStorage.getItem(profile_add) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\nexport function saveProfile(profile: Profile) {\r\n  if (profile !== undefined) {\r\n    let trimmed: Profile = {\r\n      username: profile.username,\r\n      admin: profile.admin,\r\n      personnel: profile.personnel,\r\n      distinctModules: profile.distinctModules,\r\n    };\r\n    sessionStorage.setItem(profile_add, encrypt(JSON.stringify(trimmed)));\r\n  }\r\n}\r\n\r\nexport function clearProfile() {\r\n  sessionStorage.removeItem(profile_add);\r\n}\r\n\r\nexport function getCurrentVoter(): number | undefined {\r\n  try {\r\n    return parseInt(decrypt(sessionStorage.getItem(current_voter) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function saveCurrentVoter(voterId: number) {\r\n  if (voterId !== undefined) {\r\n    sessionStorage.setItem(current_voter, encrypt(voterId.toString()));\r\n  }\r\n}\r\n\r\nexport function clearVoterId() {\r\n  sessionStorage.removeItem(current_voter);\r\n}\r\n\r\nexport function clearSession() {\r\n  sessionStorage.clear();\r\n}\r\n","export const SecurityEnd = {\r\n  Refresh: 'securities/refresh',\r\n  Login: 'securities/log',\r\n};\r\n\r\nexport const UserEnd = {\r\n  GetData: 'users/profile',\r\n  Search: 'users/search',\r\n  Activate: 'users/activate',\r\n  ResetPassword: 'users/reset-password',\r\n  Delete: 'users',\r\n  Create: 'users',\r\n  Update: 'users',\r\n  UpdateProfile: 'users/profile',\r\n};\r\nexport const ModuleEnd = {\r\n  GetList: 'modules',\r\n};\r\nexport const RoleEnd = {\r\n  Search: 'roles/search',\r\n  GetList: 'roles',\r\n  Delete: 'roles',\r\n  Create: 'roles',\r\n  Update: 'roles',\r\n};\r\n\r\nexport const ConcernEnd = {\r\n  Search: 'concerns/search',\r\n  Create: 'concerns',\r\n  Update: 'concerns',\r\n  Delete: 'concerns',\r\n  Assign: 'concerns/assign',\r\n};\r\n\r\nexport const ClassificationEnd = {\r\n  GetList: 'classifications',\r\n  Get: 'classifications',\r\n  Search: 'classifications/search',\r\n  Add: 'classifications',\r\n  Update: 'classifications',\r\n};\r\n\r\nexport const OfficeEnd = {\r\n  GetList: 'offices',\r\n  Get: 'offices',\r\n  Search: 'offices/search',\r\n  Add: 'offices',\r\n  Update: 'offices',\r\n};\r\n\r\nexport const PersonnelEnd = {\r\n  GetList: 'personnels',\r\n  GetListByClassification: 'personnels/classification',\r\n  GetAvailableListByClassification: 'personnels/classification/available',\r\n  Get: 'personnels',\r\n  Search: 'personnels/search',\r\n  Add: 'personnels',\r\n  Update: 'personnels',\r\n};\r\n\r\nexport const PersonnelConcernEnd = {\r\n  GetList: 'personnel-concerns',\r\n  GetActions: 'personnel-concerns/actions',\r\n  Resolve: 'personnel-concerns/resolve',\r\n  Forward: 'personnel-concerns/forward',\r\n  Summary: 'personnel-concerns/summary',\r\n  DetailedSummary: 'personnel-concerns/detailed-summary',\r\n};\r\n\r\nexport const Hub = {\r\n  Transaction: '/transaction-hub',\r\n};\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { SecurityEnd } from '../endpoints';\r\nimport { API } from '../constant';\r\nimport { clearToken, getToken, saveToken } from './session-manager';\r\n\r\nexport async function httpGet<Return>(\r\n  url: string\r\n): Promise<Return | undefined> {\r\n  const token = getToken();\r\n  if (token?.token === null) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .get(url, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpGet<Return>(url);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('Not Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpPost<Return>(\r\n  url: string,\r\n  param: any\r\n): Promise<Return | undefined> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .post(url, param, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n        case 201:\r\n          return res.data;\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpPost<Return>(url, param);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpPut(url: string, param: any): Promise<boolean> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .put(url, param, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpPut(url, param);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpDelete(url: string): Promise<boolean> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .delete(url, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpDelete(url);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpAuthenticatingPost<Return>(\r\n  url: string,\r\n  param: any\r\n): Promise<Return | undefined> {\r\n  return await axios\r\n    .post(url, JSON.stringify(param), {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then((res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function refreshTokenAuthentication(): Promise<\r\n  boolean | undefined\r\n> {\r\n  const request = getToken();\r\n  return await httpAuthenticatingPost<Authentication>(\r\n    SecurityEnd.Refresh,\r\n    request\r\n  )\r\n    .then((res) => {\r\n      if (res !== undefined) {\r\n        saveToken(res);\r\n        return true;\r\n      }\r\n      throw new Error('Unauthorized');\r\n    })\r\n    .catch(() => {\r\n      clearToken();\r\n      throw new Error('Unauthorized');\r\n    });\r\n}\r\n","import { SecurityEnd } from '../endpoints';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { httpAuthenticatingPost } from './base';\r\nimport { LoginUser } from '../entities/user/LoginUser';\r\nimport { saveToken } from './session-manager';\r\n\r\nexport async function authenticate(params: LoginUser): Promise<boolean> {\r\n  return await httpAuthenticatingPost(SecurityEnd.Login, params).then((res) => {\r\n    saveToken(res as Authentication);\r\n    return true;\r\n  });\r\n}\r\n","import { UserEnd } from '../endpoints';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\nimport { Profile } from '../entities/user/Profile';\r\nimport { UpdateUserProfile } from '../entities/user/UpdateUserProfile';\r\nimport { User } from '../entities/user/User';\r\nimport { SearchResult } from '../entities/SearchResult';\r\n\r\nexport async function getUserData(): Promise<Profile | undefined> {\r\n  return await httpGet<Profile>(UserEnd.GetData);\r\n}\r\n\r\nexport async function searchUsers(\r\n  name: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<User> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (name !== undefined) {\r\n    parameters += '&key=' + encodeURI(name);\r\n  }\r\n\r\n  return await httpGet<SearchResult<User>>(UserEnd.Search + parameters);\r\n}\r\n\r\nexport async function activateUsers(id: number): Promise<boolean | undefined> {\r\n  return await httpPost(UserEnd.Activate + '/' + id, null);\r\n}\r\n\r\nexport async function resetUserPassword(\r\n  id: number\r\n): Promise<boolean | undefined> {\r\n  return await httpPost(UserEnd.ResetPassword + '/' + id, null);\r\n}\r\n\r\nexport async function deleteUser(id: number): Promise<boolean> {\r\n  return await httpDelete(UserEnd.Delete + '/' + id);\r\n}\r\n\r\nexport async function createUser(\r\n  user: User,\r\n  roleIds: number[] | undefined\r\n): Promise<User | undefined> {\r\n  return await httpPost<User>(UserEnd.Create, { ...user, roleIds });\r\n}\r\n\r\nexport async function updateUser(\r\n  user: User,\r\n  newRoleIds: number[] | undefined,\r\n  accessToDelete: number[] | undefined\r\n): Promise<boolean> {\r\n  return await httpPut(UserEnd.Update + '/' + user.id, {\r\n    ...user,\r\n    newRoleIds,\r\n    accessToDelete,\r\n  });\r\n}\r\n\r\nexport async function updateProfile(\r\n  user: UpdateUserProfile\r\n): Promise<boolean | undefined> {\r\n  return await httpPost<boolean>(UserEnd.UpdateProfile, user);\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\nexport default function CustomTextBox({\r\n  title,\r\n  name,\r\n  type,\r\n  id,\r\n  className,\r\n  value,\r\n  readonly,\r\n  onChange,\r\n  onKeyPress,\r\n}: {\r\n  title: string;\r\n  value?: string;\r\n  name?: string;\r\n  type?: string;\r\n  id?: string;\r\n  className?: string;\r\n  readonly?: boolean | false;\r\n  onChange?: (data: CustomReturn) => void;\r\n  onKeyPress?: (key: React.KeyboardEvent<HTMLDivElement>) => void;\r\n}) {\r\n  const [toggle, setToggle] = useState(true);\r\n  return (\r\n    <div className='custom-input '>\r\n      <label htmlFor={name}>{title}</label>\r\n      <div className='input-container'>\r\n        {readonly ? (\r\n          <span>{value}</span>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type={\r\n                type === 'password'\r\n                  ? toggle\r\n                    ? 'password'\r\n                    : 'text'\r\n                  : type ?? 'text'\r\n              }\r\n              name={name}\r\n              id={id}\r\n              value={value}\r\n              className={className}\r\n              onChange={(e) =>\r\n                onChange?.({ elementName: name ?? '', value: e.target.value })\r\n              }\r\n              onKeyPress={onKeyPress}\r\n            />\r\n            {type === 'password' && (\r\n              <div className='eye-container'>\r\n                <FontAwesomeIcon\r\n                  icon={(toggle ? faEye : faEyeSlash) as IconProp}\r\n                  className='eye-icon'\r\n                  onClick={() => {\r\n                    setToggle((prev) => !prev);\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUpdateAuthorize,\r\n  useUpdateUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport { LoginUser } from '../entities/user/LoginUser';\r\nimport { authenticate } from '../processors/security-process';\r\nimport { saveProfile } from '../processors/session-manager';\r\nimport { getUserData } from '../processors/user-process';\r\nimport CustomTextBox from './components/custom-textbox';\r\nimport { CustomReturn } from './components/CustomReturn';\r\n\r\nexport default function LoginPage() {\r\n  const [user, setUser] = useState<LoginUser>({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const setMessage = useSetMessage();\r\n  const updateProfile = useUpdateUserProfile();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n  const setBusy = useSetBusy();\r\n  async function signIn() {\r\n    setBusy(true);\r\n    await authenticate(user)\r\n      .then(async (res) => {\r\n        if (res) {\r\n          await getProfile();\r\n          updateAuthorize(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  async function getProfile() {\r\n    setBusy(true);\r\n    await getUserData()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          saveProfile(res);\r\n          updateProfile(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onTextChange({ elementName, value }: CustomReturn) {\r\n    setUser({ ...user, [elementName]: value });\r\n  }\r\n  function onKeyPress(key: React.KeyboardEvent<HTMLDivElement>) {\r\n    if (key.key === 'Enter') {\r\n      if (user.username === '') {\r\n        document.getElementById('username')?.focus();\r\n        return;\r\n      }\r\n      if (user.password === '') {\r\n        document.getElementById('password')?.focus();\r\n        return;\r\n      }\r\n\r\n      signIn();\r\n    }\r\n  }\r\n  return (\r\n    <section>\r\n      <div className='login-container'>\r\n        <div className='login-header'>\r\n          <h1>User Authentication</h1>\r\n        </div>\r\n        <div className='login-content'>\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            id='username'\r\n            className='username'\r\n            onChange={onTextChange}\r\n            onKeyPress={onKeyPress}\r\n          />\r\n          <CustomTextBox\r\n            title='Password'\r\n            name='password'\r\n            id='password'\r\n            type='password'\r\n            className='password'\r\n            onChange={onTextChange}\r\n            onKeyPress={onKeyPress}\r\n          />\r\n          <button onClick={signIn} className='btn'>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faAngleDoubleLeft,\r\n  faAngleDoubleRight,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function Pagination({\r\n  pages,\r\n  currentPageNumber,\r\n  goInPage,\r\n}: {\r\n  pages: number;\r\n  currentPageNumber: number;\r\n  goInPage: (page: number) => void;\r\n}) {\r\n  const [currentPage, setCurrentPage] = useState<number>(currentPageNumber);\r\n  const [canGoFirst, setGoFirst] = useState<boolean>(false);\r\n  const [canGoBefore, setGoBefore] = useState<boolean>(false);\r\n  const [canGoAfter, setGoAfter] = useState<boolean>(false);\r\n  const [canGoLast, setGoLast] = useState<boolean>(false);\r\n  const [pageList, setPageList] = useState<number[]>([]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(currentPageNumber);\r\n    let pl: number[] = [];\r\n    for (let i = 1; i <= pages; i++) {\r\n      pl.push(i);\r\n    }\r\n    setPageList(pl);\r\n\r\n    setGoAfter(false);\r\n    setGoLast(false);\r\n    setGoFirst(false);\r\n    setGoBefore(false);\r\n\r\n    if (pages > 1) {\r\n      if (currentPageNumber !== pages) {\r\n        setGoAfter(true);\r\n        setGoLast(true);\r\n      }\r\n      if (currentPageNumber !== 1) {\r\n        setGoFirst(true);\r\n        setGoBefore(true);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      pl = [];\r\n    };\r\n  }, [pages, currentPageNumber]);\r\n\r\n  function goToFirst() {\r\n    if (!canGoFirst) return;\r\n\r\n    goInPage(1);\r\n\r\n    setGoFirst(false);\r\n    setGoBefore(false);\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n  }\r\n\r\n  function goToBefore() {\r\n    if (!canGoBefore) return;\r\n    setCurrentPage((cp) => {\r\n      cp = cp - 1;\r\n      if (cp === 1) {\r\n        setGoFirst(false);\r\n        setGoBefore(false);\r\n      }\r\n\r\n      goInPage(cp);\r\n\r\n      return cp;\r\n    });\r\n\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n  }\r\n\r\n  function goToAfter() {\r\n    if (!canGoAfter) return;\r\n    setCurrentPage((cp) => {\r\n      cp = cp + 1;\r\n      if (cp === pages) {\r\n        setGoAfter(false);\r\n        setGoLast(false);\r\n      }\r\n\r\n      goInPage(cp);\r\n      return cp;\r\n    });\r\n\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n  }\r\n\r\n  function goToLast() {\r\n    if (!canGoLast) return;\r\n    setCurrentPage(pages);\r\n    setGoAfter(false);\r\n    setGoLast(false);\r\n\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n\r\n    goInPage(pages);\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    setCurrentPage(page);\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n\r\n    if (page === 1) {\r\n      setGoFirst(false);\r\n      setGoBefore(false);\r\n    }\r\n\r\n    if (page === pages) {\r\n      setGoAfter(false);\r\n      setGoLast(false);\r\n    }\r\n\r\n    goInPage(page);\r\n  }\r\n\r\n  return (\r\n    <div className='pagination'>\r\n      <FontAwesomeIcon\r\n        icon={faAngleDoubleLeft as IconProp}\r\n        className={!canGoFirst ? 'disabled' : ''}\r\n        onClick={goToFirst}\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faAngleLeft as IconProp}\r\n        onClick={goToBefore}\r\n        className={!canGoBefore ? 'disabled' : ''}\r\n      />\r\n      <div className='pages-container'>\r\n        <button className='current-page'>{currentPage}</button>\r\n        <div className='pages'>\r\n          {pageList.map((pl) => (\r\n            <div\r\n              key={pl}\r\n              className={pl === currentPage ? 'active' : ''}\r\n              onClick={() => {\r\n                goToPage(pl);\r\n              }}>\r\n              {pl}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <FontAwesomeIcon\r\n        icon={faAngleRight as IconProp}\r\n        onClick={goToAfter}\r\n        className={!canGoAfter ? 'disabled' : ''}\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faAngleDoubleRight as IconProp}\r\n        onClick={goToLast}\r\n        className={!canGoLast ? 'disabled' : ''}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function SeachBar({\r\n  search,\r\n}: {\r\n  search: (key: string) => void;\r\n}) {\r\n  const [searchKey, setSearchKey] = useState<string>('');\r\n\r\n  function onKeyPress(key: React.KeyboardEvent<HTMLDivElement>) {\r\n    if (key.key === 'Enter') {\r\n      search(searchKey);\r\n    }\r\n  }\r\n\r\n  function searchKeyChange(val: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) {\r\n    setSearchKey(val.target.value);\r\n  }\r\n\r\n  function searchClick() {\r\n    search(searchKey);\r\n  }\r\n  return (\r\n    <div className='search-container'>\r\n      <input\r\n        type='text'\r\n        className='name'\r\n        placeholder='Search...'\r\n        value={searchKey}\r\n        onChange={searchKeyChange}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      <FontAwesomeIcon\r\n        className='search-icon'\r\n        icon={faSearch as IconProp}\r\n        onClick={searchClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { User } from '../../../entities/user/User';\r\nimport { USERACTIONS } from '../../user-page';\r\n\r\nexport default function UserItem({\r\n  user,\r\n  action,\r\n}: {\r\n  user: User;\r\n  action: (action: USERACTIONS) => void;\r\n}) {\r\n  return (\r\n    <tr>\r\n      <td>{user.personnel?.name}</td>\r\n      <td>{user.personnel?.classification?.description}</td>\r\n      <td>{user.username}</td>\r\n      <td className='elipsis'>\r\n        {user.admin ? 'Admin' : 'User'}\r\n        {(user.userRoles?.length ?? 0) > 0 && ' | '}\r\n        {user.userRoles?.map((x) => x.role.description).join(' | ')}\r\n      </td>\r\n      <td>{user.active ? 'Active' : 'Inactive'}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() =>\r\n            action({ type: 'Activate', id: user.id, active: user.active })\r\n          }>\r\n          Activate/Deactivate\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ type: 'ResetPassword', id: user.id })}>\r\n          Reset Password\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ type: 'Edit', user: user })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ type: 'Delete', id: user.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { PersonnelEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Personnel } from '../entities/transaction/Personnel';\r\nimport { httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function getPersonnels(): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(PersonnelEnd.GetList);\r\n}\r\n\r\nexport async function getPersonnelsByClassification(\r\n  classificationId: number\r\n): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(\r\n    `${PersonnelEnd.GetListByClassification}?classificationId=${classificationId}`\r\n  );\r\n}\r\n\r\nexport async function getAvailablePersonnelsByClassification(\r\n  classificationId: number\r\n): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(\r\n    `${PersonnelEnd.GetAvailableListByClassification}?classificationId=${classificationId}`\r\n  );\r\n}\r\nexport async function searchPersonnels(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Personnel> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Personnel>>(\r\n    PersonnelEnd.Search + parameters\r\n  );\r\n}\r\nexport async function createPersonnel(\r\n  personnel: Personnel\r\n): Promise<Personnel | undefined> {\r\n  return httpPost(PersonnelEnd.Add, personnel);\r\n}\r\nexport async function updatePersonnel(personnel: Personnel): Promise<boolean> {\r\n  return httpPut(`${PersonnelEnd.Update}/${personnel.id}`, personnel);\r\n}\r\n","import { RoleEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Role } from '../entities/user/Role';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\nexport async function getRoles(): Promise<Role[] | undefined> {\r\n  return httpGet<Role[]>(RoleEnd.GetList);\r\n}\r\nexport async function searchRoles(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Role> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Role>>(RoleEnd.Search + parameters);\r\n}\r\nexport async function deleteRole(id: number): Promise<boolean> {\r\n  return await httpDelete(RoleEnd.Delete + '/' + id);\r\n}\r\n\r\nexport async function createRole(\r\n  description: string,\r\n  moduleIds: number[] | undefined\r\n): Promise<Role | undefined> {\r\n  return await httpPost<Role>(RoleEnd.Create, {\r\n    description,\r\n    moduleIds,\r\n  });\r\n}\r\n\r\nexport async function updateRole(\r\n  id: number,\r\n  description: string,\r\n  newModuleIds: number[] | undefined,\r\n  accessToDelete: number[] | undefined\r\n): Promise<boolean> {\r\n  return await httpPut(RoleEnd.Update + '/' + id, {\r\n    description,\r\n    newModuleIds,\r\n    accessToDelete,\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\n\r\nexport default function CustomCheckBoxButton({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  isCheck,\r\n  onChange,\r\n}: {\r\n  title: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  isCheck: boolean;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  return (\r\n    <div className={'custom-input ' + className}>\r\n      <button\r\n        className={'checkbox' + (isCheck ? ' checked' : '')}\r\n        value={isCheck ? 'true' : 'false'}\r\n        id={id}\r\n        onClick={() => {\r\n          onChange?.({ elementName: name ?? '', value: !isCheck });\r\n        }}>\r\n        {title}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { CustomReturn } from './CustomReturn';\r\n\r\nexport interface DropdownItem {\r\n  key: string | undefined;\r\n  value: string | undefined;\r\n}\r\nexport default function CustomDropdown({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  value,\r\n  itemsList,\r\n  readonly,\r\n  onChange,\r\n}: {\r\n  title: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  value?: string;\r\n  itemsList: DropdownItem[];\r\n  readonly?: boolean | false;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  return (\r\n    <div className='custom-input'>\r\n      <label>{title}</label>\r\n      <div className='select-container'>\r\n        {readonly ? (\r\n          <span>{itemsList.find((x) => x.key === value)?.value}</span>\r\n        ) : (\r\n          <select\r\n            id={id}\r\n            className={className}\r\n            onChange={(e) => {\r\n              onChange?.({\r\n                elementName: name ?? '',\r\n                value: (e.target.value === '' ? '0' : e.target.value) ?? '0',\r\n              });\r\n            }}>\r\n            {itemsList?.map((item) => (\r\n              <option\r\n                key={item.key}\r\n                value={item.key}\r\n                selected={item.value === value}>\r\n                {item.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { ModuleEnd } from '../endpoints';\r\nimport { Module } from '../entities/user/Module';\r\nimport { httpGet } from './base';\r\n\r\nexport async function getModules(): Promise<Module[] | undefined> {\r\n  return await httpGet<Module[]>(ModuleEnd.GetList);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CustomCheckBox({\r\n  isCheck,\r\n  checkChange,\r\n  id,\r\n  text,\r\n}: {\r\n  checkChange: () => void;\r\n  isCheck: boolean;\r\n  id?: string;\r\n  text?: string;\r\n}) {\r\n  return (\r\n    <div className='check'>\r\n      <label className='check-container'>\r\n        <input\r\n          type='checkbox'\r\n          id={id ?? 'check'}\r\n          onChange={checkChange}\r\n          checked={isCheck}\r\n        />\r\n        <span className='checkmark'></span>\r\n      </label>\r\n      {text && (\r\n        <label className='check-label' htmlFor={id ?? 'check'}>\r\n          {text}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Module } from '../../../entities/user/Module';\r\nimport { RoleManagementActions } from '../../modals/manage-role';\r\nimport CustomCheckBox from '../custom-check-box';\r\n\r\nexport default function ModuleItemSelection({ module }: { module: Module }) {\r\n  const action = useContext(RoleManagementActions);\r\n  return (\r\n    <tr>\r\n      <td className='left-content'>\r\n        {module.viewOnly ? (\r\n          <div>{module.description}</div>\r\n        ) : (\r\n          <CustomCheckBox\r\n            checkChange={() => {\r\n              action({ action: 'Check', payload: module });\r\n            }}\r\n            id={module.id.toString()}\r\n            text={module.description}\r\n            isCheck={module?.checked ?? false}\r\n          />\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Modules } from '../../modals/manage-role';\r\nimport ModuleItemSelection from './module-item-selection';\r\n\r\nexport default function ModuleSelection() {\r\n  const modules = useContext(Modules);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Module Access</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {modules.map((module) => (\r\n          <ModuleItemSelection key={module.id} module={module} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Module } from '../../entities/user/Module';\r\nimport { Role } from '../../entities/user/Role';\r\nimport { getModules } from '../../processors/module-process';\r\nimport { createRole, updateRole } from '../../processors/role-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport ModuleSelection from '../components/role-components/module-selection';\r\nimport Modal from './modal';\r\n\r\ntype RoleManagementAction = { action: 'Check'; payload: Module };\r\nexport const RoleManagementActions = createContext<\r\n  (action: RoleManagementAction) => void\r\n>(() => {});\r\nexport const Modules = createContext<Module[]>([]);\r\nexport default function ManageRole({\r\n  selectedRole,\r\n  onClose,\r\n  viewOnly,\r\n}: {\r\n  selectedRole: Role | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n  viewOnly: boolean;\r\n}) {\r\n  const [role, setRole] = useState<Role>(\r\n    () =>\r\n      selectedRole ?? {\r\n        id: 0,\r\n        description: '',\r\n        accesses: [],\r\n      }\r\n  );\r\n  const [modules, setModules] = useState<Module[]>([]);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchModules();\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (role.id === 0) {\r\n      await createRole(\r\n        role.description,\r\n        modules.filter((x) => x.checked).map((x) => x.id)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Role Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateRole(\r\n        role.id,\r\n        role.description,\r\n        modules\r\n          .filter((x) => x.checked && x.accessId === undefined)\r\n          .map((x) => x.id),\r\n        modules\r\n          .filter((x) => !x.checked && x.accessId !== undefined)\r\n          .map((x) => x.accessId ?? 0)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Role Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange(data: CustomReturn) {\r\n    setRole((r) => {\r\n      return { ...r, [data.elementName]: data.value };\r\n    });\r\n  }\r\n  async function roleManagement(action: RoleManagementAction) {\r\n    switch (action.action) {\r\n      case 'Check':\r\n        setModules(\r\n          modules.map((x) => {\r\n            if (x.id === action.payload.id) {\r\n              x.checked = !x.checked;\r\n            }\r\n            return x;\r\n          })\r\n        );\r\n        break;\r\n    }\r\n  }\r\n  async function fetchModules() {\r\n    setBusy(true);\r\n    await getModules()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          let resMod = res.map((module) => {\r\n            const mod = role.accesses?.filter(\r\n              (acc) => acc.moduleId === module.id\r\n            )?.[0];\r\n            if (mod !== undefined) {\r\n              module.checked = true;\r\n              module.accessId = mod.id;\r\n            }\r\n            return module;\r\n          });\r\n\r\n          if (viewOnly) {\r\n            resMod = resMod\r\n              .filter((x) => x.accessId !== undefined)\r\n              .map((x) => {\r\n                x.viewOnly = true;\r\n                return x;\r\n              });\r\n          }\r\n          setModules(resMod);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        viewOnly ? 'Role' : !!selectedRole?.id ? 'Update Role' : 'Add New Role'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Description'\r\n          name='description'\r\n          value={role.description}\r\n          onChange={onChange}\r\n          readonly={viewOnly}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Modules.Provider value={modules}>\r\n          <RoleManagementActions.Provider value={roleManagement}>\r\n            <ModuleSelection />\r\n          </RoleManagementActions.Provider>\r\n        </Modules.Provider>\r\n      </div>\r\n      {!viewOnly && (\r\n        <div className='modal-footer'>\r\n          <button onClick={saveData} className='btn-modal btn-primary'>\r\n            SAVE\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEye, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { Role } from '../../entities/user/Role';\r\nimport { User, UserRole } from '../../entities/user/User';\r\nimport { getPersonnels } from '../../processors/personnel-process';\r\nimport { getRoles } from '../../processors/role-process';\r\nimport { createUser, updateUser } from '../../processors/user-process';\r\nimport CustomCheckBoxButton from '../components/custom-check-box-button';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport ManageRole from './manage-role';\r\nimport Modal from './modal';\r\nexport default function ManageUser({\r\n  usersInfo,\r\n  onClose,\r\n}: {\r\n  usersInfo: User | undefined;\r\n  onClose: (needToReLoad: boolean) => void;\r\n}) {\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [user, setUser] = useState<User>(\r\n    () =>\r\n      usersInfo ?? {\r\n        id: 0,\r\n        username: '',\r\n        name: '',\r\n        active: false,\r\n        admin: false,\r\n        userRoles: undefined,\r\n        personnel: undefined,\r\n        personnelId: undefined,\r\n      }\r\n  );\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [roleItems, setRoleItems] = useState<DropdownItem[]>([]);\r\n  const [userRoles, setUserRoles] = useState<UserRole[]>(\r\n    () => usersInfo?.userRoles ?? []\r\n  );\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState<Role | undefined>();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchPersonnels();\r\n    await fetchRoles();\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (user.id === 0) {\r\n      await createUser(\r\n        user,\r\n        userRoles.map((x) => x.roleId)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'New User Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateUser(\r\n        user,\r\n        userRoles.filter((x) => x.id === 0).map((x) => x.roleId),\r\n        userRoles.filter((x) => x.deleted).map((x) => x.id)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'User Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res);\r\n          setPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    if (elementName === 'role') {\r\n      if (value === '0') {\r\n        return;\r\n      }\r\n      let role = roles.filter((x) => x.id === +value)?.[0];\r\n      setUserRoles((r) => [\r\n        ...r,\r\n        { id: 0, roleId: role.id, role: role, userId: user.id },\r\n      ]);\r\n      setRoleItems((r) => r.filter((x) => x.key !== value));\r\n    }\r\n    if (elementName === 'personnel') {\r\n      if (value === '0') {\r\n        setUser((prev) => {\r\n          return { ...prev, personnel: undefined, personnelId: undefined };\r\n        });\r\n        return;\r\n      }\r\n      let personnel = personnels.filter((x) => x.id === +value)?.[0];\r\n      setUser((prev) => {\r\n        return {\r\n          ...prev,\r\n          personnel: personnel,\r\n          personnelId: personnel.id,\r\n          name: personnel.name,\r\n        };\r\n      });\r\n      return;\r\n    }\r\n\r\n    setUser((prevUser) => {\r\n      if (prevUser === undefined) return { [elementName]: value } as User;\r\n      return { ...prevUser, [elementName]: value };\r\n    });\r\n  }\r\n  async function fetchRoles() {\r\n    setBusy(true);\r\n    await getRoles()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setRoles(res);\r\n          setRoleItems([\r\n            { key: '', value: '' },\r\n            ...res\r\n              .filter(\r\n                (x) =>\r\n                  !user.userRoles?.filter((u) => u.roleId === x.id)?.[0]?.id\r\n              )\r\n              .map((x) => {\r\n                return { key: x.id.toString(), value: x.description };\r\n              }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => {\r\n        setBusy(false);\r\n      });\r\n  }\r\n  function undoDeleteRole(role: UserRole) {\r\n    setUserRoles((res) =>\r\n      res.map((x) => {\r\n        if (x.roleId === role.roleId) x.deleted = false;\r\n        return x;\r\n      })\r\n    );\r\n  }\r\n  function deleteRole(role: UserRole) {\r\n    setUserRoles((res) => {\r\n      if (role.id === 0) {\r\n        return res.filter((x) => x.roleId !== role.roleId);\r\n      }\r\n      return res.map((x) => {\r\n        if (x.roleId === role.roleId) x.deleted = true;\r\n        return x;\r\n      });\r\n    });\r\n    if (role.id === 0) {\r\n      setRoleItems([\r\n        ...roleItems,\r\n        {\r\n          key: role.roleId?.toString() ?? '',\r\n          value: role.role?.description ?? '',\r\n        },\r\n      ]);\r\n    }\r\n  }\r\n  function viewRole(role: UserRole) {\r\n    setSelectedRole(role.role);\r\n    setShowModal(true);\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => onClose(false)}\r\n      title={(user?.id ?? 0) > 0 ? 'Update Users Information' : 'Add New User'}>\r\n      <div className='user-management-modal-body modal-content-body'>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Personnel'\r\n            name='personnel'\r\n            value={user?.personnel?.name}\r\n            onChange={onChange}\r\n            itemsList={personnelItem}\r\n          />\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            value={user?.username}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CustomCheckBoxButton\r\n            title='Is Admin'\r\n            name='admin'\r\n            isCheck={user?.admin ?? false}\r\n            onChange={onChange}\r\n          />\r\n          <CustomCheckBoxButton\r\n            title='Is Active'\r\n            name='active'\r\n            isCheck={user?.active ?? false}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Role'\r\n            name='role'\r\n            value={user?.personnel?.name}\r\n            onChange={onChange}\r\n            itemsList={roleItems}\r\n          />\r\n        </div>\r\n        <div className='table-container'>\r\n          <table className='item-table'>\r\n            <thead>\r\n              <tr>\r\n                <th>User Roles</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {userRoles?.map((role) => (\r\n                <tr key={role.roleId} className={role.deleted ? 'deleted' : ''}>\r\n                  <td>{role.role?.description}</td>\r\n                  <td className='table-actions'>\r\n                    {role.deleted && (\r\n                      <FontAwesomeIcon\r\n                        icon={faUndo as IconProp}\r\n                        className='action-icon table-icon-button'\r\n                        onClick={() => {\r\n                          undoDeleteRole(role);\r\n                        }}\r\n                        title='Undo'\r\n                      />\r\n                    )}\r\n                    {!role.deleted && (\r\n                      <FontAwesomeIcon\r\n                        icon={faTrash as IconProp}\r\n                        className='action-icon table-icon-button'\r\n                        onClick={() => {\r\n                          deleteRole(role);\r\n                        }}\r\n                        title='Delete'\r\n                      />\r\n                    )}\r\n                    <FontAwesomeIcon\r\n                      icon={faEye as IconProp}\r\n                      className='action-icon table-icon-button'\r\n                      onClick={() => {\r\n                        viewRole(role);\r\n                      }}\r\n                      title='View'\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n      <div>\r\n        {showModal && (\r\n          <ManageRole\r\n            onClose={() => {\r\n              setShowModal(false);\r\n            }}\r\n            selectedRole={selectedRole}\r\n            viewOnly={true}\r\n          />\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { User } from '../entities/user/User';\r\nimport {\r\n  activateUsers,\r\n  deleteUser,\r\n  resetUserPassword,\r\n  searchUsers,\r\n} from '../processors/user-process';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport UserItem from './components/users-components/user-item';\r\nimport ManageUser from './modals/manage-user';\r\n\r\nexport type USERACTIONS =\r\n  | { type: 'Activate'; id: number; active: boolean }\r\n  | { type: 'ResetPassword'; id: number }\r\n  | { type: 'Edit'; user: User }\r\n  | { type: 'Delete'; id: number };\r\n\r\nexport default function UserPage() {\r\n  const [name, setName] = useState<string | undefined>();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState<User | undefined>();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchUser(name, currentPage);\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function userAction(action: USERACTIONS) {\r\n    switch (action.type) {\r\n      case 'Activate':\r\n        activateUser(action.id, action.active);\r\n        break;\r\n      case 'ResetPassword':\r\n        resetPassword(action.id);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedUser(action.user);\r\n        break;\r\n      case 'Delete':\r\n        setMessage({\r\n          message: 'Are you sure you want to delete this?',\r\n          action: 'YESNO',\r\n          onOk: () => {\r\n            deleteSelectedUser(action.id);\r\n          },\r\n        });\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function deleteSelectedUser(userid: number) {\r\n    setBusy(true);\r\n    await deleteUser(userid)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'User Deleted',\r\n          onOk: () => {\r\n            searchUser(name, currentPage);\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function activateUser(id: number, active: boolean) {\r\n    setMessage({\r\n      message: 'Active this user?',\r\n      action: 'YESNO',\r\n      onOk: async () => {\r\n        setBusy(true);\r\n        await activateUsers(id)\r\n          .then((res) => {\r\n            setUsers((users) =>\r\n              users.map((user) => {\r\n                if (user.id === id && active !== null) {\r\n                  user.active = !active;\r\n                }\r\n                return user;\r\n              })\r\n            );\r\n\r\n            setMessage({ message: active ? 'Deactivated' : 'Activated' });\r\n          })\r\n          .catch((err) => {\r\n            setMessage({ message: err.message });\r\n          })\r\n          .finally(() => setBusy(false));\r\n      },\r\n    });\r\n  }\r\n\r\n  function resetPassword(id: number) {\r\n    setMessage({\r\n      message: 'Reset Password?',\r\n      action: 'YESNO',\r\n      onOk: async () => {\r\n        setBusy(true);\r\n        await resetUserPassword(id)\r\n          .then(() => {\r\n            setMessage({ message: 'Password reset to default password' });\r\n          })\r\n          .catch((err) => {\r\n            setMessage({ message: err.message });\r\n          })\r\n          .finally(() => setBusy(false));\r\n      },\r\n    });\r\n  }\r\n\r\n  function searchUser(name: undefined | string, page: number) {\r\n    setBusy(true);\r\n    searchUsers(name, page)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setUsers(res.results);\r\n          setPageCount(res.pageCount);\r\n          setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchUser(name, page);\r\n  }\r\n\r\n  function search(key: string) {\r\n    setName(key);\r\n    searchUser(key, 1);\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchUser(name, currentPage);\r\n    }\r\n  }\r\n  function addUser() {\r\n    setSelectedUser(undefined);\r\n    setShowModal(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Users</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <table className='users-content item-table'>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Classification</th>\r\n              <th>Username</th>\r\n              <th>Role</th>\r\n              <th>Status</th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan={6}>\r\n                <button className='btn' onClick={addUser}>\r\n                  Add New User\r\n                </button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <UserItem key={user.id} user={user} action={userAction} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n      <>\r\n        {showModal && <ManageUser onClose={onClose} usersInfo={selectedUser} />}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","export const Routes = {\r\n  Home: '/',\r\n  User: '/users',\r\n  Role: '/roles',\r\n  Office: '/offices',\r\n  Personnel: '/personnels',\r\n  Classification: '/classifications',\r\n  Concern: '/concerns',\r\n  Ticket: '/tickets',\r\n  Summary: '/summary',\r\n};\r\n","import { ConcernEnd } from '../endpoints';\r\nimport { Concern } from '../entities/transaction/Concern';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function searchConcerns(\r\n  name: string | undefined,\r\n  page: number,\r\n  assigned: boolean,\r\n  closed: boolean\r\n): Promise<SearchResult<Concern> | undefined> {\r\n  let parameters: string = `?page=${page}&isAssigned=${assigned}&isClosed=${closed}`;\r\n  if (name !== undefined) {\r\n    parameters += '&key=' + encodeURI(name);\r\n  }\r\n  return await httpGet<SearchResult<Concern>>(ConcernEnd.Search + parameters);\r\n}\r\nexport async function createConcern(\r\n  concern: Concern,\r\n  personnelId: number | undefined\r\n): Promise<Concern | undefined> {\r\n  return await httpPost<Concern>(ConcernEnd.Create, {\r\n    ...concern,\r\n    personnelId,\r\n  });\r\n}\r\n\r\nexport async function updateConcern(concern: Concern): Promise<boolean> {\r\n  return await httpPut(`${ConcernEnd.Update}/${concern.id}`, concern);\r\n}\r\n\r\nexport async function deleteConcern(id: number): Promise<boolean> {\r\n  return await httpDelete(`${ConcernEnd.Delete}/${id}`);\r\n}\r\n\r\nexport async function assignConcern(\r\n  id: number,\r\n  personnelId: number\r\n): Promise<boolean | undefined> {\r\n  return await httpPost<boolean>(ConcernEnd.Assign, { id, personnelId });\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ConcernStatus } from '../../../constant';\r\nimport { Concern } from '../../../entities/transaction/Concern';\r\nimport { ConcernActions } from '../../concern-page';\r\n\r\nexport default function ConcernItem({ concern }: { concern: Concern }) {\r\n  const action = useContext(ConcernActions);\r\n  return (\r\n    <tr>\r\n      <td>\r\n        {concern.entryDate && new Date(concern.entryDate).toLocaleString()}\r\n      </td>\r\n      <td>{concern.number}</td>\r\n      <td>{concern.description}</td>\r\n      <td>{concern.classification?.description}</td>\r\n      <td>{concern.office?.description}</td>\r\n      <td>{concern.caller}</td>\r\n      <td>\r\n        <div>{concern.status}</div>\r\n        <div>\r\n          {concern.closedDate && new Date(concern.closedDate).toLocaleString()}\r\n        </div>\r\n      </td>\r\n      <td className='table-actions'>\r\n        {concern.statusId !== ConcernStatus.Open && (\r\n          <button\r\n            className='btn'\r\n            onClick={() => action({ action: 'ViewAction', payload: concern })}>\r\n            View Actions\r\n          </button>\r\n        )}\r\n        {concern.statusId === ConcernStatus.Open && (\r\n          <>\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Assign', payload: concern })}>\r\n              Assign To Concerned Personnel\r\n            </button>\r\n\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Edit', payload: concern })}>\r\n              Edit\r\n            </button>\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Delete', payload: concern.id })}>\r\n              Delete\r\n            </button>\r\n          </>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ConcernActions, ConcernList } from '../../concern-page';\r\nimport ConcernItem from './concern-item';\r\n\r\nexport default function ConcernItems() {\r\n  const action = useContext(ConcernActions);\r\n  const concerns = useContext(ConcernList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th style={{ width: '8%' }}>Time Entry</th>\r\n          <th style={{ width: '10%' }}>Ticket Number</th>\r\n          <th>Description</th>\r\n          <th style={{ width: '10%' }}>Classification</th>\r\n          <th style={{ width: '20%' }}>Concern Office</th>\r\n          <th style={{ width: '15%' }}>Caller</th>\r\n          <th style={{ width: '8%' }}>Status</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Concern\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <ConcernItem key={concern.id} concern={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Concern } from '../../entities/transaction/Concern';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { assignConcern } from '../../processors/concern-process';\r\nimport {\r\n  getAvailablePersonnelsByClassification,\r\n  getPersonnels,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function AssignConcern({\r\n  title,\r\n  onClose,\r\n  concern,\r\n}: {\r\n  title?: string;\r\n  onClose: (hasChanges: boolean, personnel: string) => void;\r\n  concern: Concern | undefined;\r\n}) {\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [availabelPersonnelItem, setAvailabelPersonnelItem] = useState<\r\n    DropdownItem[]\r\n  >([]);\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const [selectedAvailablePersonnel, setSelectedAvailablePersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchAvailablePersonnels();\r\n    await fetchPersonnels();\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res);\r\n          setPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchAvailablePersonnels() {\r\n    setBusy(true);\r\n    await getAvailablePersonnelsByClassification(concern?.classificationId ?? 0)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setAvailabelPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    if (elementName === 'personnel') {\r\n      if (value === '0') {\r\n        setSelectedPersonnel(undefined);\r\n        return;\r\n      }\r\n      setSelectedPersonnel(personnels.filter((x) => x.id === +value)?.[0]);\r\n      setSelectedAvailablePersonnel(undefined);\r\n      return;\r\n    }\r\n    if (elementName === 'available-personnel') {\r\n      if (value === '0') {\r\n        setSelectedAvailablePersonnel(undefined);\r\n        return;\r\n      }\r\n      setSelectedAvailablePersonnel(\r\n        personnels.filter((x) => x.id === +value)?.[0]\r\n      );\r\n      setSelectedPersonnel(undefined);\r\n      return;\r\n    }\r\n  }\r\n\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if ((selectedPersonnel?.id ?? selectedAvailablePersonnel?.id ?? 0) === 0) {\r\n      setMessage({ message: 'Select Personnel' });\r\n      return;\r\n    }\r\n    await assignConcern(\r\n      concern?.id ?? 0,\r\n      selectedPersonnel?.id ?? selectedAvailablePersonnel?.id ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res)\r\n          setMessage({\r\n            message: 'Success',\r\n            onOk: () => {\r\n              onClose(\r\n                true,\r\n                selectedPersonnel?.name ??\r\n                  selectedAvailablePersonnel?.name ??\r\n                  ''\r\n              );\r\n            },\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal onClose={() => onClose(false, '')} title={title ?? 'Assign Concern'}>\r\n      <div className='concern-management-modal-body modal-content-body'>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Available Personnel'\r\n            name='available-personnel'\r\n            value={selectedAvailablePersonnel?.name}\r\n            onChange={onChange}\r\n            itemsList={availabelPersonnelItem}\r\n          />\r\n          <CustomDropdown\r\n            title='All Personnel'\r\n            name='personnel'\r\n            value={selectedPersonnel?.name}\r\n            onChange={onChange}\r\n            itemsList={personnelItem}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          ASSIGN\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { PersonnelConcernEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport {\r\n  PersonnelConcern,\r\n  TicketSummary,\r\n} from '../entities/transaction/PersonnelConcern';\r\nimport { httpGet, httpPost } from './base';\r\n\r\nexport async function getDirectConcerns(\r\n  isResolve: boolean,\r\n  isForwarded: boolean,\r\n  isPending: boolean,\r\n  page: number\r\n): Promise<SearchResult<PersonnelConcern> | undefined> {\r\n  let params = `?isResolved=${isResolve}&isForwarded=${isForwarded}&isPending=${isPending}&page=${page}`;\r\n  return httpGet<SearchResult<PersonnelConcern>>(\r\n    `${PersonnelConcernEnd.GetList}${params}`\r\n  );\r\n}\r\nexport async function getActions(\r\n  concernId: number\r\n): Promise<PersonnelConcern[] | undefined> {\r\n  return httpGet<PersonnelConcern[]>(\r\n    `${PersonnelConcernEnd.GetActions}?concernId=${concernId}`\r\n  );\r\n}\r\nexport async function resolvePersonnelConcern(\r\n  id: number,\r\n  actionTaken: string\r\n): Promise<boolean | undefined> {\r\n  return httpPost<boolean>(PersonnelConcernEnd.Resolve, { id, actionTaken });\r\n}\r\nexport async function forwardPersonnelConcern(\r\n  id: number,\r\n  personnelId: number,\r\n  reason: string\r\n): Promise<boolean | undefined> {\r\n  return httpPost<boolean>(PersonnelConcernEnd.Forward, {\r\n    id,\r\n    personnelId,\r\n    reason,\r\n  });\r\n}\r\n\r\nexport async function getTicketSummary(\r\n  month: number,\r\n  year: number\r\n): Promise<TicketSummary[] | undefined> {\r\n  return httpGet<TicketSummary[]>(\r\n    `${PersonnelConcernEnd.Summary}?month=${month}&year=${year}`\r\n  );\r\n}\r\n\r\nexport async function getDetailedSummary(\r\n  year: number,\r\n  month: number,\r\n  day: number\r\n): Promise<PersonnelConcern[] | undefined> {\r\n  return httpGet<PersonnelConcern[]>(\r\n    `${PersonnelConcernEnd.DetailedSummary}?year=${year}&month=${month}&day=${day}`\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { PersonnelConcernStatus } from '../../../constant';\r\nimport { PersonnelConcern } from '../../../entities/transaction/PersonnelConcern';\r\n\r\nexport default function ConcernAction({\r\n  action,\r\n}: {\r\n  action: PersonnelConcern;\r\n}) {\r\n  return (\r\n    <div className='concern-action'>\r\n      <div>\r\n        <span>\r\n          {action.prevPersonnelConcernId ? 'Forwarded' : 'Assigned'} to\r\n        </span>\r\n        &nbsp;\r\n        <span>\r\n          (\r\n          {action.receivedDate &&\r\n            new Date(action.receivedDate).toLocaleString()}\r\n          )\r\n        </span>\r\n        <span>\r\n          {action.prevPersonnelConcernId ? '' : ` By ${action.creator}`}\r\n        </span>\r\n      </div>\r\n      <div>{action.personnel?.name}</div>\r\n      <div>Status</div>\r\n      <div>\r\n        {action.status}\r\n        {action.closedDate && (\r\n          <span> ({new Date(action.closedDate).toLocaleString()})</span>\r\n        )}\r\n      </div>\r\n      {action.statusId !== PersonnelConcernStatus.Pending && (\r\n        <>\r\n          <div>\r\n            {action.statusId === PersonnelConcernStatus.Forwarded\r\n              ? 'Reason'\r\n              : 'Action Taken'}\r\n            :\r\n          </div>\r\n          <div>{action.action}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Concern } from '../../entities/transaction/Concern';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { getActions } from '../../processors/personnel-concern-process';\r\nimport ConcernAction from '../components/concerns-components/concern-action';\r\nimport Modal from './modal';\r\n\r\nexport default function ConcernActionsViewer({\r\n  concern,\r\n  onClose,\r\n}: {\r\n  concern: Concern | undefined;\r\n  onClose: () => void;\r\n}) {\r\n  const [personnelConcern, setPersonnelConcern] = useState<PersonnelConcern[]>(\r\n    []\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchActions();\r\n  }\r\n  async function fetchActions() {\r\n    setBusy(true);\r\n    await getActions(concern?.id ?? 0)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnelConcern(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  return (\r\n    <Modal title='Concern Actions' onClose={onClose}>\r\n      <div className='modal-content-body'>\r\n        <div className='concern-actions'>\r\n          {personnelConcern.map((x) => (\r\n            <ConcernAction key={x.id} action={x} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { ClassificationEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Classification } from '../entities/transaction/Classification';\r\nimport { httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function getClassifications(): Promise<\r\n  Classification[] | undefined\r\n> {\r\n  return await httpGet<Classification[]>(ClassificationEnd.GetList);\r\n}\r\nexport async function searchClassifications(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Classification> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Classification>>(\r\n    ClassificationEnd.Search + parameters\r\n  );\r\n}\r\nexport async function createClassification(\r\n  classification: Classification\r\n): Promise<Classification | undefined> {\r\n  return httpPost(ClassificationEnd.Add, classification);\r\n}\r\nexport async function updateClassification(\r\n  classification: Classification\r\n): Promise<boolean> {\r\n  return httpPut(\r\n    `${ClassificationEnd.Update}/${classification.id}`,\r\n    classification\r\n  );\r\n}\r\n","import { OfficeEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Office } from '../entities/transaction/Office';\r\nimport { httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function getOffices(): Promise<Office[] | undefined> {\r\n  return await httpGet<Office[]>(OfficeEnd.GetList);\r\n}\r\nexport async function searchOffices(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Office> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Office>>(OfficeEnd.Search + parameters);\r\n}\r\nexport async function createOffice(\r\n  office: Office\r\n): Promise<Office | undefined> {\r\n  return httpPost(OfficeEnd.Add, office);\r\n}\r\nexport async function updateOffice(office: Office): Promise<boolean> {\r\n  return httpPut(`${OfficeEnd.Update}/${office.id}`, office);\r\n}\r\n","import React from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\nexport default function CustomTextArea({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  value,\r\n  readonly,\r\n  onChange,\r\n  lineCount,\r\n}: {\r\n  title: string;\r\n  value?: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  readonly?: boolean | false;\r\n  lineCount?: number | undefined;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  return (\r\n    <div className='custom-input no-height'>\r\n      <label htmlFor={name}>{title}</label>\r\n      <div className='input-container'>\r\n        {readonly ? (\r\n          <span>{value}</span>\r\n        ) : (\r\n          <>\r\n            <textarea\r\n              rows={lineCount}\r\n              name={name}\r\n              id={id}\r\n              value={value}\r\n              className={className}\r\n              onChange={(e) =>\r\n                onChange?.({ elementName: name ?? '', value: e.target.value })\r\n              }\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Classification } from '../../entities/transaction/Classification';\r\nimport { Concern } from '../../entities/transaction/Concern';\r\nimport { Office } from '../../entities/transaction/Office';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { getClassifications } from '../../processors/classification-process';\r\nimport { createConcern, updateConcern } from '../../processors/concern-process';\r\nimport { getOffices } from '../../processors/office-process';\r\nimport {\r\n  getAvailablePersonnelsByClassification,\r\n  getPersonnels,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextArea from '../components/custom-textarea';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageConcern({\r\n  selectedConcern,\r\n  onClose,\r\n}: {\r\n  selectedConcern: Concern | undefined;\r\n  onClose: (hasChange: boolean, personnel: string) => void;\r\n}) {\r\n  const [concern, setConcern] = useState<Concern>(\r\n    () =>\r\n      selectedConcern ?? {\r\n        id: 0,\r\n        number: '',\r\n        entryDate: undefined,\r\n        caller: '',\r\n        description: '',\r\n        classification: undefined,\r\n        classificationId: undefined,\r\n        closedDate: undefined,\r\n        officeId: undefined,\r\n        office: undefined,\r\n        personnel: undefined,\r\n        personnelId: undefined,\r\n      }\r\n  );\r\n  const [classifications, setClassifications] = useState<Classification[]>([]);\r\n  const [offices, setOffices] = useState<Office[]>([]);\r\n  const [classificationItem, setClassificationItem] = useState<DropdownItem[]>(\r\n    () => []\r\n  );\r\n  const [officeItem, setOfficeItem] = useState<DropdownItem[]>(() => []);\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [availabelPersonnelItem, setAvailabelPersonnelItem] = useState<\r\n    DropdownItem[]\r\n  >([]);\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const [selectedAvailablePersonnel, setSelectedAvailablePersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchClassifications();\r\n    await fetchOffices();\r\n    await fetchAvailablePersonnels();\r\n    await fetchPersonnels();\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res);\r\n          setPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchAvailablePersonnels(\r\n    classificationId?: number | undefined\r\n  ) {\r\n    setBusy(true);\r\n    await getAvailablePersonnelsByClassification(\r\n      classificationId ?? concern?.classificationId ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setSelectedAvailablePersonnel(undefined);\r\n          setAvailabelPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchClassifications() {\r\n    setBusy(true);\r\n    await getClassifications()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassifications(() => res);\r\n          setClassificationItem(() => [\r\n            { key: '', value: '' },\r\n            ...res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchOffices() {\r\n    setBusy(true);\r\n    await getOffices()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setOffices(() => res);\r\n          setOfficeItem(() => [\r\n            { key: '', value: '' },\r\n            ...res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (concern.id === 0) {\r\n      await createConcern(\r\n        concern!,\r\n        selectedPersonnel?.id ?? selectedAvailablePersonnel?.id\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'New Concern Added',\r\n            onOk: () => {\r\n              onClose(\r\n                true,\r\n                selectedPersonnel?.name ??\r\n                  selectedAvailablePersonnel?.name ??\r\n                  ''\r\n              );\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateConcern(concern)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Concern Updated',\r\n            onOk: () => {\r\n              onClose(\r\n                true,\r\n                selectedPersonnel?.name ??\r\n                  selectedAvailablePersonnel?.name ??\r\n                  ''\r\n              );\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n\r\n  async function onChange({ elementName, value }: CustomReturn) {\r\n    if (elementName === 'personnel') {\r\n      if (value === '0') {\r\n        setSelectedPersonnel(undefined);\r\n        return;\r\n      }\r\n\r\n      setSelectedPersonnel(personnels.filter((x) => x.id === +value)?.[0]);\r\n      setSelectedAvailablePersonnel(undefined);\r\n      return;\r\n    }\r\n    if (elementName === 'available-personnel') {\r\n      if (value === '0') {\r\n        setSelectedAvailablePersonnel(undefined);\r\n        return;\r\n      }\r\n      setSelectedAvailablePersonnel(\r\n        personnels.filter((x) => x.id === +value)?.[0]\r\n      );\r\n      setSelectedPersonnel(undefined);\r\n      return;\r\n    }\r\n    if (elementName === 'office') {\r\n      if (value === '0') {\r\n        setConcern((prev) => {\r\n          if (prev === undefined)\r\n            return { office: undefined, officeId: undefined } as Concern;\r\n          return { ...prev, office: undefined, officeId: undefined };\r\n        });\r\n        return;\r\n      }\r\n      let office = offices.filter((x) => x.id === +value)?.[0];\r\n      setConcern((prev) => {\r\n        if (prev === undefined)\r\n          return { office: office, officeId: office.id } as Concern;\r\n        return { ...prev, office: office, officeId: office.id };\r\n      });\r\n      return;\r\n    }\r\n    if (elementName === 'classification') {\r\n      if (value === '0') {\r\n        setConcern((prev) => {\r\n          if (prev === undefined)\r\n            return {\r\n              classification: undefined,\r\n              classificationId: undefined,\r\n            } as Concern;\r\n          return {\r\n            ...prev,\r\n            classification: undefined,\r\n            classificationId: undefined,\r\n          };\r\n        });\r\n        setAvailabelPersonnelItem([]);\r\n        return;\r\n      }\r\n      let classification = classifications.filter((x) => x.id === +value)?.[0];\r\n      setConcern((prev) => {\r\n        if (prev === undefined)\r\n          return {\r\n            classification: classification,\r\n            classificationId: classification.id,\r\n          } as Concern;\r\n        return {\r\n          ...prev,\r\n          classification: classification,\r\n          classificationId: classification.id,\r\n        };\r\n      });\r\n\r\n      await fetchAvailablePersonnels(classification?.id);\r\n      return;\r\n    }\r\n    setConcern((prevConcern) => {\r\n      if (prevConcern === undefined) return { [elementName]: value } as Concern;\r\n      return { ...prevConcern, [elementName]: value };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => onClose(false, '')}\r\n      title={\r\n        (concern?.id ?? 0) > 0\r\n          ? `Update Concern ${concern.number}`\r\n          : 'New Concern'\r\n      }\r\n      className='management-modal'>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <div>\r\n          <div>\r\n            <CustomDropdown\r\n              title='Office'\r\n              name='office'\r\n              value={concern?.office?.description}\r\n              onChange={onChange}\r\n              itemsList={officeItem}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CustomDropdown\r\n              title='Classification'\r\n              name='classification'\r\n              value={concern?.classification?.description}\r\n              onChange={onChange}\r\n              itemsList={classificationItem}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CustomTextBox\r\n              title='Caller'\r\n              name='caller'\r\n              value={concern?.caller}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <CustomTextArea\r\n            title='Description'\r\n            name='description'\r\n            lineCount={7}\r\n            value={concern?.description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        {!concern.id && (\r\n          <div>\r\n            <div>\r\n              <CustomDropdown\r\n                title='Available Personnel'\r\n                name='available-personnel'\r\n                value={selectedAvailablePersonnel?.name}\r\n                onChange={onChange}\r\n                itemsList={availabelPersonnelItem}\r\n              />\r\n              <CustomDropdown\r\n                title='All Personnel'\r\n                name='personnel'\r\n                value={selectedPersonnel?.name}\r\n                onChange={onChange}\r\n                itemsList={personnelItem}\r\n              />\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  HubConnectionState,\r\n  LogLevel,\r\n} from '@microsoft/signalr';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\nimport { API } from '../constant';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Hub } from '../endpoints';\r\nimport { Concern } from '../entities/transaction/Concern';\r\nimport { deleteConcern, searchConcerns } from '../processors/concern-process';\r\nimport ConcernItems from './components/concerns-components/concern-items';\r\nimport CustomCheckBox from './components/custom-check-box';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport AssignConcern from './modals/assign-concern';\r\nimport ConcernActionsViewer from './modals/concern-actions-viewer';\r\nimport ManageConcern from './modals/manage-concern';\r\n\r\nexport type CONCERNACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Assign'; payload: Concern }\r\n  | { action: 'ViewAction'; payload: Concern }\r\n  | { action: 'Edit'; payload: Concern }\r\n  | { action: 'Delete'; payload: number };\r\n\r\nexport const ConcernList = createContext<Concern[]>([]);\r\nexport const ConcernActions = createContext<(action: CONCERNACTIONS) => void>(\r\n  () => {}\r\n);\r\nexport default function ConcernPage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [concerns, setConcerns] = useState<Concern[]>(() => []);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showAssignmentModal, setShowAssignmentModal] = useState(false);\r\n  const [showActionsModal, setShowActionsModal] = useState(false);\r\n  const [selectedConcern, setSelectedConcern] = useState<Concern | undefined>();\r\n  const [assigned, setAssigned] = useState(true);\r\n  const [closed, setClosed] = useState(false);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [connection, setConnection] = useState<HubConnection>();\r\n  async function onClose(hasChanges: boolean, personnel: string | undefined) {\r\n    setShowModal(false);\r\n    setShowAssignmentModal(false);\r\n    if (hasChanges) {\r\n      console.log(connection?.state);\r\n      await reconnect();\r\n      await connection?.invoke('NewConcern');\r\n      await connection?.invoke('NewTicket', personnel);\r\n      searchConcern({});\r\n    }\r\n  }\r\n  useEffect(\r\n    () => {\r\n      if (!('Notification' in window)) {\r\n        console.log('This browser does not support desktop notification');\r\n      } else {\r\n        Notification.requestPermission();\r\n      }\r\n      connect();\r\n      searchConcern({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function connect() {\r\n    try {\r\n      if (connection === undefined) {\r\n        var conn = new HubConnectionBuilder()\r\n          .withUrl(API + Hub.Transaction)\r\n          .configureLogging(LogLevel.Information)\r\n          .build();\r\n\r\n        conn.on('NewConcern', () => {\r\n          new Notification('New Concern Added');\r\n          searchConcern({});\r\n        });\r\n        conn.on('ResolveConcern', (ticketnumber) => {\r\n          new Notification(`Ticket ${ticketnumber} Resolved`);\r\n          searchConcern({});\r\n        });\r\n        await conn.start();\r\n        if (conn.state === HubConnectionState.Connected) {\r\n          await conn.invoke('JoinConcernCreators');\r\n          console.log(conn.state);\r\n        }\r\n        setConnection(conn);\r\n      } else {\r\n        await reconnect();\r\n      }\r\n    } catch (ex) {\r\n      setMessage({ message: ex });\r\n    }\r\n  }\r\n\r\n  async function reconnect() {\r\n    if (connection?.state === HubConnectionState.Disconnected)\r\n      await connection?.start();\r\n  }\r\n  async function searchConcern({\r\n    searchKey,\r\n    pageNumber,\r\n    isAssigned,\r\n    isClosed,\r\n  }: {\r\n    searchKey?: string;\r\n    pageNumber?: number;\r\n    isAssigned?: boolean;\r\n    isClosed?: boolean;\r\n  }) {\r\n    setBusy(true);\r\n    searchConcerns(\r\n      searchKey ?? key,\r\n      pageNumber ?? currentPage,\r\n      isAssigned ?? assigned,\r\n      isClosed ?? closed\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setConcerns(res.results);\r\n          setPageCount(res.pageCount);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function search(key: string) {\r\n    setKey(key);\r\n    setCurrentPage(1);\r\n    searchConcern({ searchKey: key, pageNumber: 1 });\r\n  }\r\n  function goToPage(page: number) {\r\n    setCurrentPage(page);\r\n    searchConcern({ pageNumber: page });\r\n  }\r\n  function concernAction(action: CONCERNACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setSelectedConcern(() => undefined);\r\n        setShowModal(() => true);\r\n        break;\r\n      case 'ViewAction':\r\n        setSelectedConcern(action.payload);\r\n        setShowActionsModal(true);\r\n        break;\r\n      case 'Assign':\r\n        setSelectedConcern(action.payload);\r\n        setShowAssignmentModal(true);\r\n        break;\r\n      case 'Edit':\r\n        setSelectedConcern(action.payload);\r\n        setShowModal(true);\r\n        break;\r\n      case 'Delete':\r\n        setMessage({\r\n          message: 'Are you sure you want to delete this?',\r\n          action: 'YESNO',\r\n          onOk: () => {\r\n            deleteSelectedConcern(action.payload);\r\n          },\r\n        });\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function deleteSelectedConcern(id: number) {\r\n    setBusy(true);\r\n    await deleteConcern(id)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'User Deleted',\r\n          onOk: () => {\r\n            searchConcern({});\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Concerns</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section className='head-content'>\r\n        <div className='checkbox-container'>\r\n          <CustomCheckBox\r\n            text='Assigned'\r\n            id='assigned'\r\n            checkChange={() => {\r\n              var x = !assigned;\r\n              setAssigned(x);\r\n              searchConcern({ isAssigned: x });\r\n            }}\r\n            isCheck={assigned}\r\n          />\r\n          <CustomCheckBox\r\n            text='Closed'\r\n            id='closed'\r\n            checkChange={() => {\r\n              var x = !closed;\r\n              setClosed(x);\r\n              searchConcern({ isClosed: x });\r\n            }}\r\n            isCheck={closed}\r\n          />\r\n        </div>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <ConcernList.Provider value={concerns}>\r\n          <ConcernActions.Provider value={concernAction}>\r\n            <ConcernItems />\r\n          </ConcernActions.Provider>\r\n        </ConcernList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManageConcern onClose={onClose} selectedConcern={selectedConcern} />\r\n        )}\r\n        {showAssignmentModal && (\r\n          <AssignConcern onClose={onClose} concern={selectedConcern} />\r\n        )}\r\n        {showActionsModal && (\r\n          <ConcernActionsViewer\r\n            concern={selectedConcern}\r\n            onClose={() => setShowActionsModal(false)}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUpdateUserProfile,\r\n  useUserProfile,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { UpdateUserProfile } from '../../entities/user/UpdateUserProfile';\r\nimport { saveProfile } from '../../processors/session-manager';\r\nimport { updateProfile } from '../../processors/user-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageProfile({ onClose }: { onClose: () => void }) {\r\n  const profile = useUserProfile();\r\n  const updateProfileInfo = useUpdateUserProfile();\r\n  const [user, setUser] = useState<UpdateUserProfile>(() => {\r\n    return {\r\n      username: profile?.username ?? '',\r\n      personnel: profile?.personnel,\r\n      password: '',\r\n      newPassword: '',\r\n      confirmNewPassword: '',\r\n    };\r\n  });\r\n\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    if ((user.password ?? '') !== '') {\r\n      if (\r\n        (user.newPassword ?? '') !== '' &&\r\n        (user.confirmNewPassword ?? '') !== ''\r\n      ) {\r\n        if (user.newPassword !== user.confirmNewPassword) {\r\n          setMessage({ message: 'Password not match' });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    setBusy(true);\r\n    await updateProfile(user)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'Profile Updated',\r\n          onOk: () => {\r\n            saveProfile({\r\n              ...profile,\r\n              username: user.username,\r\n            });\r\n            updateProfileInfo({\r\n              ...profile,\r\n              username: user.username,\r\n            });\r\n            onClose();\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    setUser((prevUser) => {\r\n      return { ...prevUser, [elementName]: value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal className='profile-modal' onClose={onClose} title='Users Profile'>\r\n      <div className='modal-content-body'>\r\n        <div>\r\n          <CustomTextBox\r\n            title='Name'\r\n            readonly={true}\r\n            value={user?.personnel?.name}\r\n          />\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            value={user?.username}\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='Old Password'\r\n            name='password'\r\n            value={user?.password}\r\n            type='password'\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='New Password'\r\n            name='newPassword'\r\n            type='password'\r\n            value={user?.newPassword}\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='Confirm New Password'\r\n            name='confirmNewPassword'\r\n            type='password'\r\n            value={user?.confirmNewPassword}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Role } from '../../../entities/user/Role';\r\nimport { RoleActions } from '../../role-page';\r\n\r\nexport default function RoleItem({ role }: { role: Role }) {\r\n  const action = useContext(RoleActions);\r\n  return (\r\n    <tr>\r\n      <td>{role.description}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'View', payload: role })}>\r\n          View\r\n        </button>\r\n\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: role })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: role.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { RoleActions, RoleList } from '../../role-page';\r\nimport RoleItem from './role-item';\r\n\r\nexport default function RoleItems() {\r\n  const action = useContext(RoleActions);\r\n  const concerns = useContext(RoleList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Role\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <RoleItem key={concern.id} role={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Module } from '../entities/user/Module';\r\nimport { Role } from '../entities/user/Role';\r\nimport { searchRoles } from '../processors/role-process';\r\nimport Pagination from './components/pagination';\r\nimport RoleItems from './components/role-components/role-items';\r\nimport SeachBar from './components/seachbar';\r\nimport ManageRole from './modals/manage-role';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'View'; payload: Role }\r\n  | { action: 'Edit'; payload: Role }\r\n  | { action: 'Delete'; payload: number }\r\n  | { action: 'Check'; payload: Module };\r\nexport const RoleList = createContext<Role[]>([]);\r\nexport const RoleActions = createContext<(action: ACTIONS) => void>(() => {});\r\n\r\nexport default function RolePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState<Role | undefined>();\r\n  const [viewOnly, setViewOnly] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      searchRole({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function roleAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'View':\r\n        setShowModal(true);\r\n        setSelectedRole(action.payload);\r\n        setViewOnly(true);\r\n        break;\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedRole(undefined);\r\n        setViewOnly(false);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedRole(action.payload);\r\n        setViewOnly(false);\r\n        break;\r\n      // case 'Delete':\r\n      //   setMessage({\r\n      //     message: 'Are you sure you want to delete this?',\r\n      //     action: 'YESNO',\r\n      //     onOk: () => {\r\n      //       deleteSelectedUser(action.payload);\r\n      //     },\r\n      //   });\r\n      //   break;\r\n      // default:\r\n      //   setMessage({ message: 'Invalid Action' });\r\n      //   break;\r\n    }\r\n  }\r\n\r\n  function searchRole({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchRoles(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setRoles(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchRole({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchRole({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchRole({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Roles</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <RoleList.Provider value={roles}>\r\n          <RoleActions.Provider value={roleAction}>\r\n            <RoleItems />\r\n          </RoleActions.Provider>\r\n        </RoleList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManageRole\r\n            onClose={onClose}\r\n            selectedRole={selectedRole}\r\n            viewOnly={viewOnly}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { PersonnelConcernStatus } from '../../../constant';\r\nimport { PersonnelConcern } from '../../../entities/transaction/PersonnelConcern';\r\nimport { DirectConcernActions } from '../../ticket-page';\r\n\r\nexport default function DirectConcernItem({\r\n  concern,\r\n}: {\r\n  concern: PersonnelConcern;\r\n}) {\r\n  const action = useContext(DirectConcernActions);\r\n  return (\r\n    <tr\r\n      title={\r\n        concern?.action\r\n          ? (concern?.statusId ?? 0) === PersonnelConcernStatus.Resolved\r\n            ? `Action Taken: ${concern.action}`\r\n            : `Reason: ${concern.action}`\r\n          : undefined\r\n      }>\r\n      <td>\r\n        {concern.receivedDate &&\r\n          new Date(concern.receivedDate).toLocaleString()}\r\n      </td>\r\n      <td>{concern.concern.number}</td>\r\n      <td>\r\n        <div>{concern.concern.description}</div>\r\n        {concern.prevPersonnelConcernId && (\r\n          <div>\r\n            <span>Forward Reason: </span>\r\n            {concern.prevPersonnelConcern?.action}\r\n          </div>\r\n        )}\r\n      </td>\r\n      <td>{concern.concern.classification?.description}</td>\r\n      <td>{concern.concern.office?.description}</td>\r\n      <td>{concern.concern.caller}</td>\r\n      <td>\r\n        <div>{concern.status}</div>\r\n        <div>\r\n          {concern.closedDate && (\r\n            <span> ({new Date(concern.closedDate).toLocaleString()})</span>\r\n          )}\r\n        </div>\r\n      </td>\r\n      <td className='table-actions'>\r\n        {concern.statusId === PersonnelConcernStatus.Pending && (\r\n          <>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Resolve', payload: concern });\r\n              }}>\r\n              Resolve\r\n            </button>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Forward', payload: concern });\r\n              }}>\r\n              Forward\r\n            </button>\r\n          </>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { DirectConcernList } from '../../ticket-page';\r\nimport DirectConcernItem from './direct-concern-item';\r\n\r\nexport default function DirectConcernItems() {\r\n  const concerns = useContext(DirectConcernList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th style={{ width: '8%' }}>Received Date</th>\r\n          <th style={{ width: '10%' }}>Ticket Number</th>\r\n          <th>Description</th>\r\n          <th style={{ width: '10%' }}>Classification</th>\r\n          <th style={{ width: '20%' }}>Concern Office</th>\r\n          <th style={{ width: '15%' }}>Caller</th>\r\n          <th style={{ width: '8%' }}>Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <DirectConcernItem key={concern.id} concern={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUserProfile,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { forwardPersonnelConcern } from '../../processors/personnel-concern-process';\r\nimport {\r\n  getAvailablePersonnelsByClassification,\r\n  getPersonnels,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextArea from '../components/custom-textarea';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ForwardConcern({\r\n  onClose,\r\n  personnelConcern,\r\n}: {\r\n  onClose: (hasChanges: boolean, personnel: string) => void;\r\n  personnelConcern: PersonnelConcern | undefined;\r\n}) {\r\n  const [reason, setReason] = useState<string>('');\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [availabelPersonnelItem, setAvailabelPersonnelItem] = useState<\r\n    DropdownItem[]\r\n  >([]);\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const [selectedAvailablePersonnel, setSelectedAvailablePersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const profile = useUserProfile();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchAvailablePersonnels();\r\n    await fetchPersonnels();\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res);\r\n          setPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res\r\n              .filter((x) => x.id !== profile?.personnel?.id)\r\n              .map((x) => {\r\n                return {\r\n                  key: x.id.toString(),\r\n                  value: x.name,\r\n                };\r\n              }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchAvailablePersonnels() {\r\n    setBusy(true);\r\n    await getAvailablePersonnelsByClassification(\r\n      personnelConcern?.concern?.classificationId ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setAvailabelPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res\r\n              .filter((x) => x.id !== profile?.personnel?.id)\r\n              .map((x) => {\r\n                return {\r\n                  key: x.id.toString(),\r\n                  value: x.name,\r\n                };\r\n              }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    if (elementName === 'personnel') {\r\n      if (value === '0') {\r\n        setSelectedPersonnel(undefined);\r\n        return;\r\n      }\r\n      setSelectedPersonnel(personnels.filter((x) => x.id === +value)?.[0]);\r\n      setSelectedAvailablePersonnel(undefined);\r\n      return;\r\n    }\r\n    if (elementName === 'available-personnel') {\r\n      if (value === '0') {\r\n        setSelectedAvailablePersonnel(undefined);\r\n        return;\r\n      }\r\n      setSelectedAvailablePersonnel(\r\n        personnels.filter((x) => x.id === +value)?.[0]\r\n      );\r\n      setSelectedPersonnel(undefined);\r\n      return;\r\n    }\r\n  }\r\n\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if ((selectedPersonnel?.id ?? selectedAvailablePersonnel?.id ?? 0) === 0) {\r\n      setMessage({ message: 'Select Personnel' });\r\n      return;\r\n    }\r\n    await forwardPersonnelConcern(\r\n      personnelConcern?.id ?? 0,\r\n      selectedPersonnel?.id ?? selectedAvailablePersonnel?.id ?? 0,\r\n      reason\r\n    )\r\n      .then((res) => {\r\n        if (res)\r\n          setMessage({\r\n            message: 'Success',\r\n            onOk: () => {\r\n              onClose(\r\n                true,\r\n                selectedPersonnel?.name ??\r\n                  selectedAvailablePersonnel?.name ??\r\n                  ''\r\n              );\r\n            },\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false, '');\r\n      }}\r\n      title='Forward Concern'>\r\n      <div className='concern-management-modal-body modal-content-body'>\r\n        <div>\r\n          <CustomTextArea\r\n            title='Reason'\r\n            lineCount={5}\r\n            onChange={(data) => {\r\n              setReason(data.value);\r\n            }}\r\n          />\r\n          <CustomDropdown\r\n            title='Available Personnel'\r\n            name='available-personnel'\r\n            value={selectedAvailablePersonnel?.name}\r\n            onChange={onChange}\r\n            itemsList={availabelPersonnelItem}\r\n          />\r\n          <CustomDropdown\r\n            title='All Personnel'\r\n            name='personnel'\r\n            value={selectedPersonnel?.name}\r\n            onChange={onChange}\r\n            itemsList={personnelItem}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          FORWARD\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { resolvePersonnelConcern } from '../../processors/personnel-concern-process';\r\nimport CustomTextArea from '../components/custom-textarea';\r\nimport Modal from './modal';\r\n\r\nexport default function ResolveConcern({\r\n  personnelConcern,\r\n  onClose,\r\n}: {\r\n  personnelConcern: PersonnelConcern | undefined;\r\n  onClose: (hasChange: boolean) => void;\r\n}) {\r\n  const [actionTaken, setActionTaken] = useState<string>('');\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    setBusy(true);\r\n    await resolvePersonnelConcern(personnelConcern?.id ?? 0, actionTaken)\r\n      .then((res) => {\r\n        if (res)\r\n          setMessage({\r\n            message: 'Success',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title='Resolve Concern'>\r\n      <div className='modal-content-body'>\r\n        <div>\r\n          <CustomTextArea\r\n            title='Action Taken'\r\n            lineCount={5}\r\n            onChange={(data) => {\r\n              setActionTaken(data.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          RESOLVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  HubConnectionState,\r\n} from '@microsoft/signalr';\r\nimport { createContext, useEffect, useState } from 'react';\r\nimport { API } from '../constant';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport { Hub } from '../endpoints';\r\nimport { PersonnelConcern } from '../entities/transaction/PersonnelConcern';\r\nimport { getDirectConcerns } from '../processors/personnel-concern-process';\r\nimport CustomCheckBox from './components/custom-check-box';\r\nimport Pagination from './components/pagination';\r\nimport DirectConcernItems from './components/tickets-components/direct-concern-items';\r\nimport ForwardConcern from './modals/forward-concern';\r\nimport ResolveConcern from './modals/resolve-concern';\r\n\r\nexport type CONCERNACTIONS =\r\n  | { action: 'Resolve'; payload: PersonnelConcern }\r\n  | { action: 'Forward'; payload: PersonnelConcern };\r\n\r\nexport const DirectConcernList = createContext<PersonnelConcern[]>([]);\r\nexport const DirectConcernActions = createContext<\r\n  (action: CONCERNACTIONS) => void\r\n>(() => {});\r\nexport default function TicketPage() {\r\n  const [directConcerns, setDirectConcerns] = useState<PersonnelConcern[]>([]);\r\n  const [selectedDirectConcern, setSelectedDirectConcern] = useState<\r\n    PersonnelConcern | undefined\r\n  >();\r\n  const [showResolveModal, setShowResolveModal] = useState(false);\r\n  const [showForwardModal, setShowForwardModal] = useState(false);\r\n  const [pending, setPending] = useState(true);\r\n  const [resolved, setResolved] = useState(false);\r\n  const [forwarded, setForwarded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const profile = useUserProfile();\r\n  const setMessage = useSetMessage();\r\n  const setBusy = useSetBusy();\r\n  const [connection, setConnection] = useState<HubConnection>();\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!('Notification' in window)) {\r\n        console.log('This browser does not support desktop notification');\r\n      } else {\r\n        Notification.requestPermission();\r\n      }\r\n      connect();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n  async function connect() {\r\n    try {\r\n      if (connection === undefined) {\r\n        var conn = new HubConnectionBuilder()\r\n          .withUrl(API + Hub.Transaction)\r\n          .build();\r\n\r\n        conn.on('NewTicket', () => {\r\n          new Notification('New Ticket Assigned');\r\n          fetchDirectConcern({});\r\n        });\r\n\r\n        conn.on('ForwardTicket', (personnel) => {\r\n          new Notification(`New Ticket Forwarded by ${personnel}`);\r\n          fetchDirectConcern({});\r\n        });\r\n\r\n        await conn.start();\r\n        if (conn.state === HubConnectionState.Connected)\r\n          await conn.invoke('JoinTicket', profile?.personnel?.name);\r\n        setConnection(conn);\r\n      } else {\r\n        await reconnect();\r\n      }\r\n    } catch (ex) {\r\n      setMessage({ message: ex });\r\n    }\r\n  }\r\n  async function reconnect() {\r\n    if (connection?.state === HubConnectionState.Disconnected)\r\n      await connection?.start();\r\n  }\r\n  async function concernAction(action: CONCERNACTIONS) {\r\n    switch (action.action) {\r\n      case 'Resolve':\r\n        setSelectedDirectConcern(action.payload);\r\n        setShowResolveModal(true);\r\n        break;\r\n      case 'Forward':\r\n        setSelectedDirectConcern(action.payload);\r\n        setShowForwardModal(true);\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n  useEffect(\r\n    () => {\r\n      fetchDirectConcern({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  async function fetchDirectConcern({\r\n    page,\r\n    isResolved,\r\n    isForwarded,\r\n    isPending,\r\n  }: {\r\n    page?: number | undefined;\r\n    isResolved?: boolean | undefined;\r\n    isForwarded?: boolean | undefined;\r\n    isPending?: boolean | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    await getDirectConcerns(\r\n      isResolved ?? resolved,\r\n      isForwarded ?? forwarded,\r\n      isPending ?? pending,\r\n      page ?? currentPage\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setDirectConcerns(res.results);\r\n          setPageCount(res.pageCount);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    setCurrentPage(page);\r\n    fetchDirectConcern({ page: page });\r\n  }\r\n\r\n  async function onCloseForward(hasChanges: boolean, personnel: string) {\r\n    setShowForwardModal(false);\r\n    if (hasChanges) {\r\n      fetchDirectConcern({});\r\n      await reconnect();\r\n      await connection?.invoke(\r\n        'ForwardTicket',\r\n        profile?.personnel?.name,\r\n        personnel\r\n      );\r\n    }\r\n  }\r\n  async function onCLoseResolve(hasChanges: boolean) {\r\n    setShowResolveModal(false);\r\n    if (hasChanges) {\r\n      await reconnect();\r\n      await connection?.invoke(\r\n        'Resolve',\r\n        selectedDirectConcern?.concern.number\r\n      );\r\n      fetchDirectConcern({});\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Tickets</div>\r\n        </div>\r\n      </section>\r\n      <section className='head-content'>\r\n        <div className='checkbox-container'>\r\n          <CustomCheckBox\r\n            text='Pending'\r\n            id='pending'\r\n            checkChange={() => {\r\n              var x = !pending;\r\n              setPending(x);\r\n              fetchDirectConcern({ isPending: x });\r\n            }}\r\n            isCheck={pending}\r\n          />\r\n          <CustomCheckBox\r\n            text='Resolved'\r\n            id='resolved'\r\n            checkChange={() => {\r\n              var x = !resolved;\r\n              setResolved(x);\r\n              fetchDirectConcern({ isResolved: x });\r\n            }}\r\n            isCheck={resolved}\r\n          />\r\n          <CustomCheckBox\r\n            text='Forwarded'\r\n            id='forwarded'\r\n            checkChange={() => {\r\n              var x = !forwarded;\r\n              setForwarded(x);\r\n              fetchDirectConcern({ isForwarded: x });\r\n            }}\r\n            isCheck={forwarded}\r\n          />\r\n        </div>\r\n\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <DirectConcernList.Provider value={directConcerns}>\r\n          <DirectConcernActions.Provider value={concernAction}>\r\n            <DirectConcernItems />\r\n          </DirectConcernActions.Provider>\r\n        </DirectConcernList.Provider>\r\n      </section>\r\n      <>\r\n        {showResolveModal && (\r\n          <ResolveConcern\r\n            onClose={onCLoseResolve}\r\n            personnelConcern={selectedDirectConcern}\r\n          />\r\n        )}\r\n        {showForwardModal && (\r\n          <ForwardConcern\r\n            onClose={onCloseForward}\r\n            personnelConcern={selectedDirectConcern}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Classification } from '../../../entities/transaction/Classification';\r\nimport { ClassificationActions } from '../../classification-page';\r\n\r\nexport default function ClassificationItem({\r\n  classification,\r\n}: {\r\n  classification: Classification;\r\n}) {\r\n  const action = useContext(ClassificationActions);\r\n  return (\r\n    <tr>\r\n      <td>{classification.description}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: classification })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() =>\r\n            action({ action: 'Delete', payload: classification.id })\r\n          }>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport {\r\n  ClassificationActions,\r\n  ClassificationList,\r\n} from '../../classification-page';\r\nimport ClassificationItem from './classification-item';\r\n\r\nexport default function ClassificationItems() {\r\n  const action = useContext(ClassificationActions);\r\n  const classifications = useContext(ClassificationList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Classification\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {classifications.map((classification) => (\r\n          <ClassificationItem\r\n            key={classification.id}\r\n            classification={classification}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Classification } from '../../entities/transaction/Classification';\r\nimport {\r\n  createClassification,\r\n  updateClassification,\r\n} from '../../processors/classification-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageClassification({\r\n  selectedClassification,\r\n  onClose,\r\n}: {\r\n  selectedClassification: Classification | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n}) {\r\n  const [classification, setClassification] = useState<Classification>(\r\n    () =>\r\n      selectedClassification ?? {\r\n        id: 0,\r\n        description: '',\r\n      }\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (classification.id === 0) {\r\n      await createClassification(classification)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Classification Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateClassification(classification)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Classification Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange(data: CustomReturn) {\r\n    setClassification((r) => {\r\n      return { ...r, [data.elementName]: data.value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        !!selectedClassification?.id\r\n          ? 'Update Classificaiton'\r\n          : 'Add New Classificaiton'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Description'\r\n          name='description'\r\n          value={classification.description}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Classification } from '../entities/transaction/Classification';\r\nimport { searchClassifications } from '../processors/classification-process';\r\nimport ClassificationItems from './components/classification-components/classification-items';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport ManageClassification from './modals/manage-classification';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Edit'; payload: Classification }\r\n  | { action: 'Delete'; payload: number };\r\nexport const ClassificationList = createContext<Classification[]>([]);\r\nexport const ClassificationActions = createContext<(action: ACTIONS) => void>(\r\n  () => {}\r\n);\r\n\r\nexport default function ClassificationPage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [classifications, setClassifications] = useState<Classification[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedClassification, setSelectedClassification] = useState<\r\n    Classification | undefined\r\n  >();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchClassification({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function classificationAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedClassification(undefined);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedClassification(action.payload);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function searchClassification({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchClassifications(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassifications(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchClassification({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchClassification({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchClassification({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Classifications</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <Pagination\r\n        pages={pageCount}\r\n        currentPageNumber={currentPage}\r\n        goInPage={goToPage}></Pagination>\r\n      <section>\r\n        <ClassificationList.Provider value={classifications}>\r\n          <ClassificationActions.Provider value={classificationAction}>\r\n            <ClassificationItems />\r\n          </ClassificationActions.Provider>\r\n        </ClassificationList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManageClassification\r\n            onClose={onClose}\r\n            selectedClassification={selectedClassification}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Personnel } from '../../../entities/transaction/Personnel';\r\nimport { PersonnelActions } from '../../personnel-page';\r\n\r\nexport default function PersonnelItem({ personnel }: { personnel: Personnel }) {\r\n  const action = useContext(PersonnelActions);\r\n  return (\r\n    <tr>\r\n      <td>{personnel.name}</td>\r\n      <td>{personnel.classification?.description}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: personnel })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: personnel.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { PersonnelActions, PersonnelList } from '../../personnel-page';\r\nimport PersonnelItem from './personnel-item';\r\n\r\nexport default function PersonnelItems() {\r\n  const action = useContext(PersonnelActions);\r\n  const personnels = useContext(PersonnelList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Classification</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Personnel\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {personnels.map((personnel) => (\r\n          <PersonnelItem key={personnel.id} personnel={personnel} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Classification } from '../../entities/transaction/Classification';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { getClassifications } from '../../processors/classification-process';\r\nimport {\r\n  createPersonnel,\r\n  updatePersonnel,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManagePersonnel({\r\n  selectedPersonnel,\r\n  onClose,\r\n}: {\r\n  selectedPersonnel: Personnel | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n}) {\r\n  const [personnel, setPersonnel] = useState<Personnel>(\r\n    () =>\r\n      selectedPersonnel ?? {\r\n        id: 0,\r\n        classification: undefined,\r\n        classificationId: undefined,\r\n        name: '',\r\n      }\r\n  );\r\n  const [classifications, setClassifications] = useState<Classification[]>([]);\r\n  const [classificationItem, setClassificationItem] = useState<DropdownItem[]>(\r\n    []\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  async function initializeComponents() {\r\n    await fetchClassifications();\r\n  }\r\n  async function fetchClassifications() {\r\n    setBusy(true);\r\n    await getClassifications()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassifications(() => res);\r\n          setClassificationItem(() => [\r\n            { key: '', value: '' },\r\n            ...res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (personnel.id === 0) {\r\n      await createPersonnel(personnel)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Personnel Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updatePersonnel(personnel)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Personnel Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange({ value, elementName }: CustomReturn) {\r\n    if (elementName === 'classification') {\r\n      if (value === '0') {\r\n        setPersonnel((prev) => {\r\n          if (prev === undefined)\r\n            return {\r\n              classification: undefined,\r\n              classificationId: undefined,\r\n            } as Personnel;\r\n          return {\r\n            ...prev,\r\n            classification: undefined,\r\n            classificationId: undefined,\r\n          };\r\n        });\r\n        return;\r\n      }\r\n      let classification = classifications.filter((x) => x.id === +value)?.[0];\r\n      setPersonnel((prev) => {\r\n        if (prev === undefined)\r\n          return {\r\n            classification: classification,\r\n            classificationId: classification.id,\r\n          } as Personnel;\r\n        return {\r\n          ...prev,\r\n          classification: classification,\r\n          classificationId: classification.id,\r\n        };\r\n      });\r\n      return;\r\n    }\r\n    setPersonnel((r) => {\r\n      return { ...r, [elementName]: value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        !!selectedPersonnel?.id ? 'Update Personnel' : 'Add New Personnel'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Name'\r\n          name='name'\r\n          value={personnel.name}\r\n          onChange={onChange}\r\n        />\r\n        <CustomDropdown\r\n          title='Classification'\r\n          name='classification'\r\n          value={personnel?.classification?.description}\r\n          onChange={onChange}\r\n          itemsList={classificationItem}\r\n        />\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../entities/transaction/Personnel';\r\nimport { searchPersonnels } from '../processors/personnel-process';\r\nimport Pagination from './components/pagination';\r\nimport PersonnelItems from './components/personnel-components/personnel-items';\r\nimport SeachBar from './components/seachbar';\r\nimport ManagePersonnel from './modals/manage-personnel';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Edit'; payload: Personnel }\r\n  | { action: 'Delete'; payload: number };\r\nexport const PersonnelList = createContext<Personnel[]>([]);\r\nexport const PersonnelActions = createContext<(action: ACTIONS) => void>(\r\n  () => {}\r\n);\r\n\r\nexport default function OfficePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchPersonnel({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function personnelAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedPersonnel(undefined);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedPersonnel(action.payload);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function searchPersonnel({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchPersonnels(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchPersonnel({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchPersonnel({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchPersonnel({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Personnels</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <PersonnelList.Provider value={personnels}>\r\n          <PersonnelActions.Provider value={personnelAction}>\r\n            <PersonnelItems />\r\n          </PersonnelActions.Provider>\r\n        </PersonnelList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManagePersonnel\r\n            onClose={onClose}\r\n            selectedPersonnel={selectedPersonnel}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Office } from '../../../entities/transaction/Office';\r\nimport { OfficeActions } from '../../office-page';\r\n\r\nexport default function OfficeItem({ office }: { office: Office }) {\r\n  const action = useContext(OfficeActions);\r\n  return (\r\n    <tr>\r\n      <td>{office.description}</td>\r\n      <td>{office.abbreviation}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: office })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: office.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { OfficeActions, OfficeList } from '../../office-page';\r\nimport OfficeItem from './office-item';\r\n\r\nexport default function OfficeItems() {\r\n  const action = useContext(OfficeActions);\r\n  const offices = useContext(OfficeList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Description</th>\r\n          <th>Abbreviation</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Office\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {offices.map((office) => (\r\n          <OfficeItem key={office.id} office={office} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Office } from '../../entities/transaction/Office';\r\nimport { createOffice, updateOffice } from '../../processors/office-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageOffice({\r\n  selectedOffice,\r\n  onClose,\r\n}: {\r\n  selectedOffice: Office | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n}) {\r\n  const [office, setOffice] = useState<Office>(\r\n    () =>\r\n      selectedOffice ?? {\r\n        id: 0,\r\n        description: '',\r\n        abbreviation: '',\r\n      }\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (office.id === 0) {\r\n      await createOffice(office)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Office Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateOffice(office)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Office Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange(data: CustomReturn) {\r\n    setOffice((r) => {\r\n      return { ...r, [data.elementName]: data.value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={!!selectedOffice?.id ? 'Update Office' : 'Add New Office'}>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Description'\r\n          name='description'\r\n          value={office.description}\r\n          onChange={onChange}\r\n        />\r\n        <CustomTextBox\r\n          title='Abbreviation'\r\n          name='abbreviation'\r\n          value={office.abbreviation}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Office } from '../entities/transaction/Office';\r\nimport { searchOffices } from '../processors/office-process';\r\nimport OfficeItems from './components/office-components/office-items';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport ManageOffice from './modals/manage-office';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Edit'; payload: Office }\r\n  | { action: 'Delete'; payload: number };\r\nexport const OfficeList = createContext<Office[]>([]);\r\nexport const OfficeActions = createContext<(action: ACTIONS) => void>(() => {});\r\n\r\nexport default function OfficePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [offices, setOffices] = useState<Office[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedOffice, setSelectedOffice] = useState<Office | undefined>();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchOffice({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function officeAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedOffice(undefined);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedOffice(action.payload);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function searchOffice({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchOffices(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setOffices(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchOffice({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchOffice({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchOffice({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Offices</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <OfficeList.Provider value={offices}>\r\n          <OfficeActions.Provider value={officeAction}>\r\n            <OfficeItems />\r\n          </OfficeActions.Provider>\r\n        </OfficeList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManageOffice onClose={onClose} selectedOffice={selectedOffice} />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Dashboard() {\r\n  return <div></div>;\r\n}\r\n","export function downloadFile(file: string, fileName: string) {\r\n  let link = document.createElement('a');\r\n  link.href = file;\r\n  link.setAttribute('download', fileName);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}\r\n\r\nexport function addDays(date: Date, days: number): Date {\r\n  var result = new Date(date);\r\n  result.setDate(result.getDate() + days);\r\n  return result;\r\n}\r\n\r\nexport function addMonths(date: Date, months: number): Date {\r\n  var result = new Date(date);\r\n  result.setMonth(result.getMonth() + months);\r\n  return result;\r\n}\r\n\r\nexport function getLastDateOfMonth(date: Date): Date {\r\n  var result = new Date(date);\r\n  result.setDate(1);\r\n  result = addMonths(result, 1);\r\n  result = addDays(result, -1);\r\n  return result;\r\n}\r\n\r\nexport function getFirstDateOfMonth(date: Date): Date {\r\n  var result = new Date(date);\r\n  result.setDate(1);\r\n  return result;\r\n}\r\n\r\nexport function getMonthName(date: Date): string {\r\n  const monthName = new Intl.DateTimeFormat('en-US', { month: 'long' }).format;\r\n  return monthName(date);\r\n}\r\n","import React from 'react';\r\nimport { PersonnelConcernStatus } from '../../../constant';\r\nimport { PersonnelConcern } from '../../../entities/transaction/PersonnelConcern';\r\n\r\nexport default function ConcernDetail({\r\n  concern,\r\n}: {\r\n  concern: PersonnelConcern;\r\n}) {\r\n  return (\r\n    <div className='concern-action'>\r\n      <div>Received Date & Time</div>\r\n      <div>\r\n        {concern.receivedDate &&\r\n          new Date(concern.receivedDate).toLocaleString()}\r\n      </div>\r\n      <div>Concern</div>\r\n      <div>{concern.concern.description}</div>\r\n      {concern.prevPersonnelConcernId && (\r\n        <>\r\n          <div>Forwarded By</div>\r\n          <div>{concern.prevPersonnelConcern?.personnel?.name}</div>\r\n          <div>Forwarded Reason</div>\r\n          <div>{concern.prevPersonnelConcern?.action}</div>\r\n        </>\r\n      )}\r\n      <div>Status</div>\r\n      <div>\r\n        {concern.status}\r\n        {concern.closedDate && (\r\n          <span> ({new Date(concern.closedDate).toLocaleString()})</span>\r\n        )}\r\n      </div>\r\n      {concern.statusId !== PersonnelConcernStatus.Pending && (\r\n        <>\r\n          <div>\r\n            {concern.statusId === PersonnelConcernStatus.Forwarded\r\n              ? 'Reason'\r\n              : 'Action Taken'}\r\n            :\r\n          </div>\r\n          <div>{concern.action}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { getDetailedSummary } from '../../processors/personnel-concern-process';\r\nimport ConcernDetail from '../components/concerns-components/concern-detail';\r\nimport Modal from './modal';\r\n\r\nexport default function DetailedSummary({\r\n  date,\r\n  onClose,\r\n}: {\r\n  date: Date | undefined;\r\n  onClose: () => void;\r\n}) {\r\n  const [personnelConcern, setPersonnelConcern] = useState<PersonnelConcern[]>(\r\n    []\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchDetailedSummary();\r\n  }\r\n  async function fetchDetailedSummary() {\r\n    setBusy(true);\r\n    await getDetailedSummary(\r\n      date?.getFullYear() ?? 0,\r\n      (date?.getMonth() ?? 0) + 1,\r\n      date?.getDate() ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnelConcern(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  return (\r\n    <Modal title='Closed Concerns' className='concern-detail' onClose={onClose}>\r\n      <div className='modal-content-body'>\r\n        <div className='concern-actions'>\r\n          {personnelConcern.map((x) => (\r\n            <ConcernDetail key={x.id} concern={x} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { TicketSummary } from '../entities/transaction/PersonnelConcern';\r\nimport {\r\n  addDays,\r\n  addMonths,\r\n  getFirstDateOfMonth,\r\n  getLastDateOfMonth,\r\n  getMonthName,\r\n} from '../helpers';\r\nimport { getTicketSummary } from '../processors/personnel-concern-process';\r\nimport DetailedSummary from './modals/detailed-summary';\r\ninterface SummaryDate {\r\n  date: Date;\r\n  summary?: TicketSummary | undefined;\r\n}\r\nexport default function SummaryPage() {\r\n  const setMessage = useSetMessage();\r\n  const setBusy = useSetBusy();\r\n  const [currentDate, setCurrentDate] = useState<Date>(() => new Date());\r\n  const [dates, setDates] = useState<SummaryDate[]>(() => []);\r\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(undefined);\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    //eslint-disable-next-line\r\n    [currentDate]\r\n  );\r\n\r\n  async function initializeComponents() {\r\n    setBusy(true);\r\n    await getTicketSummary(\r\n      currentDate.getMonth() + 1,\r\n      currentDate.getFullYear()\r\n    )\r\n      .then((res) => {\r\n        const firstDate = getFirstDateOfMonth(currentDate);\r\n        const lastDate = getLastDateOfMonth(currentDate);\r\n        let firstDay = firstDate.getDay();\r\n\r\n        let date = firstDate;\r\n        const last =\r\n          (lastDate.getDate() ?? 0) + firstDay + (6 - lastDate.getDay());\r\n        var _dates: SummaryDate[] = [];\r\n        if (firstDay > 0) {\r\n          date = addDays(firstDate, -firstDay);\r\n        }\r\n        for (let i = 0; i < last; i++) {\r\n          var sum = res?.filter(\r\n            // eslint-disable-next-line\r\n            (x) => new Date(x.date).toDateString() === date.toDateString()\r\n          )?.[0];\r\n          _dates = [..._dates, { date: date, summary: sum }];\r\n          date = addDays(date, 1);\r\n        }\r\n        setDates(() => _dates);\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Ticket Summary</div>\r\n          <div className='date-action'>\r\n            <FontAwesomeIcon\r\n              icon={faAngleLeft as IconProp}\r\n              onClick={() => setCurrentDate(() => addMonths(currentDate, -1))}\r\n            />\r\n            <div className='month-year'>\r\n              <div onClick={() => setMessage({ message: 'month' })}>\r\n                {getMonthName(currentDate)}\r\n              </div>\r\n              <div onClick={() => setMessage({ message: 'month' })}>\r\n                {currentDate.getFullYear()}\r\n              </div>\r\n            </div>\r\n            <FontAwesomeIcon\r\n              icon={faAngleRight as IconProp}\r\n              onClick={() => setCurrentDate(() => addMonths(currentDate, 1))}\r\n              className={\r\n                currentDate.getMonth() === new Date().getMonth() &&\r\n                currentDate.getFullYear() === new Date().getFullYear()\r\n                  ? 'stop'\r\n                  : ''\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div className='calendar'>\r\n          <div className='day-header'>Su</div>\r\n          <div className='day-header'>Mo</div>\r\n          <div className='day-header'>Tu</div>\r\n          <div className='day-header'>We</div>\r\n          <div className='day-header'>Th</div>\r\n          <div className='day-header'>Fr</div>\r\n          <div className='day-header'>Sa</div>\r\n          {dates.map((x, i) => (\r\n            <div\r\n              className={`date ${\r\n                x.date.getMonth() === currentDate.getMonth()\r\n                  ? 'current-month'\r\n                  : 'non'\r\n              } ${\r\n                x.date.toDateString() === new Date().toDateString()\r\n                  ? 'current'\r\n                  : ''\r\n              } ${\r\n                !!x.summary?.noOfResolved || !!x.summary?.noOfForwarded\r\n                  ? 'has-data'\r\n                  : ''\r\n              }`}\r\n              key={i}\r\n              onClick={() => {\r\n                if (!!x.summary?.noOfResolved || !!x.summary?.noOfForwarded) {\r\n                  setSelectedDate(x.date);\r\n                  setShowModal(true);\r\n                  return;\r\n                }\r\n                if (\r\n                  x.date.getMonth() < currentDate.getMonth() ||\r\n                  x.date.getFullYear() < currentDate.getFullYear()\r\n                ) {\r\n                  setCurrentDate(x.date);\r\n                  return;\r\n                }\r\n                if (\r\n                  currentDate.getMonth() !== new Date().getMonth() &&\r\n                  currentDate.getFullYear() === new Date().getFullYear()\r\n                ) {\r\n                  if (\r\n                    x.date.getMonth() > currentDate.getMonth() ||\r\n                    x.date.getFullYear() > currentDate.getFullYear()\r\n                  ) {\r\n                    setCurrentDate(x.date);\r\n                  }\r\n                  return;\r\n                }\r\n              }}>\r\n              <div className='day'>{x.date.getDate()}</div>\r\n              <div className='remarks'>\r\n                {!!x.summary?.noOfResolved && (\r\n                  <div>RESOLVED: {x.summary?.noOfResolved}</div>\r\n                )}\r\n                {!!x.summary?.noOfForwarded && (\r\n                  <div>FORWARDED: {x.summary?.noOfForwarded}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <DetailedSummary\r\n            date={selectedDate}\r\n            onClose={() => {\r\n              setShowModal(false);\r\n              setSelectedDate(undefined);\r\n            }}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { BrowserRouter, NavLink, Route, Switch } from 'react-router-dom';\r\nimport {\r\n  useAuthorize,\r\n  useSetMessage,\r\n  useUpdateAuthorize,\r\n  useUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport LoginPage from './login-page';\r\nimport UserPage from './user-page';\r\n\r\nimport { useMemo, useState } from 'react';\r\nimport { ICON } from '../constant';\r\nimport { Routes } from '../routes';\r\nimport ConcernPage from './concern-page';\r\nimport ManageProfile from './modals/manage-profile';\r\nimport RolePage from './role-page';\r\nimport TicketPage from './ticket-page';\r\nimport ClassificationPage from './classification-page';\r\nimport PersonnelPage from './personnel-page';\r\nimport OfficePage from './office-page';\r\nimport Dashboard from './dashboard';\r\nimport SummaryPage from './summary-page';\r\n\r\nexport default function HomePage() {\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const authorize = useAuthorize();\r\n  const profile = useUserProfile();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n  const setMessage = useSetMessage();\r\n  const menus: {\r\n    head: string;\r\n    navs: { route: string | undefined; name: string | undefined }[];\r\n  }[] = useMemo(\r\n    () => [\r\n      ...(profile?.admin\r\n        ? [\r\n            {\r\n              head: 'Transactions',\r\n              navs: [\r\n                {\r\n                  route: Routes.Concern,\r\n                  name: 'Concerns',\r\n                },\r\n                {\r\n                  route: Routes.Ticket,\r\n                  name: 'Tickets',\r\n                },\r\n                {\r\n                  route: Routes.Summary,\r\n                  name: 'Summary',\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              head: 'Maintenances',\r\n              navs: [\r\n                {\r\n                  route: Routes.User,\r\n                  name: 'Users',\r\n                },\r\n                {\r\n                  route: Routes.Personnel,\r\n                  name: 'Personnels',\r\n                },\r\n                {\r\n                  route: Routes.Role,\r\n                  name: 'Roles',\r\n                },\r\n                {\r\n                  route: Routes.Classification,\r\n                  name: 'Classifications',\r\n                },\r\n                {\r\n                  route: Routes.Office,\r\n                  name: 'Offices',\r\n                },\r\n              ],\r\n            },\r\n          ]\r\n        : [\r\n            {\r\n              head: 'Transactions',\r\n              navs: [\r\n                ...(profile?.distinctModules\r\n                  ?.filter((x) => x.header === 'Transaction')\r\n                  .map((x) => {\r\n                    return { route: x.route, name: x.description };\r\n                  }) ?? []),\r\n              ],\r\n            },\r\n            {\r\n              head: 'Maintenances',\r\n              navs: [\r\n                ...(profile?.distinctModules\r\n                  ?.filter((x) => x.header === 'Maintenance')\r\n                  .map((x) => {\r\n                    return { route: x.route, name: x.description };\r\n                  }) ?? []),\r\n              ],\r\n            },\r\n          ]),\r\n    ],\r\n    [profile?.distinctModules, profile?.admin]\r\n  );\r\n\r\n  function logoutUser() {\r\n    setMessage({\r\n      message: 'Continue to logout?',\r\n      action: 'YESNO',\r\n      onOk: () => {\r\n        updateAuthorize(false);\r\n        setShowProfile(false);\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {authorize ? (\r\n        <BrowserRouter>\r\n          <header>\r\n            <nav>\r\n              <div className='menu-container'>\r\n                <NavLink to={Routes.Home} exact className='nav-icon'>\r\n                  {ICON}\r\n                </NavLink>\r\n                {(profile?.distinctModules?.length ?? 0) <= 3 &&\r\n                (profile?.distinctModules?.length ?? 0) > 0 ? (\r\n                  <>\r\n                    {profile?.distinctModules?.map((x) => (\r\n                      <NavLink\r\n                        to={x.route ?? ''}\r\n                        exact\r\n                        className='nav-menu'\r\n                        key={x.accessId}>\r\n                        {x.description}\r\n                      </NavLink>\r\n                    ))}\r\n                  </>\r\n                ) : (\r\n                  <div>\r\n                    <button className='nav-menu'>Menus</button>\r\n                    <div className='menus'>\r\n                      {menus\r\n                        .filter((x) => x.navs.length > 0)\r\n                        .map((menu) => (\r\n                          <div className='menu-items' key={menu.head}>\r\n                            <div className='head'>{menu.head}</div>\r\n                            <div className='navs'>\r\n                              {menu.navs.map((nav) => (\r\n                                <div key={nav.route}>\r\n                                  <NavLink\r\n                                    to={nav.route ?? ''}\r\n                                    exact\r\n                                    className='nav-menu'>\r\n                                    {nav.name}\r\n                                  </NavLink>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className='menu-container'>\r\n                <label\r\n                  className='user-name nav-menu'\r\n                  onClick={() => setShowProfile(true)}>\r\n                  {`${profile?.personnel?.name} (${profile?.personnel?.classification?.description})`}\r\n                </label>\r\n                <label onClick={logoutUser} className='nav-menu'>\r\n                  Logout\r\n                </label>\r\n              </div>\r\n            </nav>\r\n          </header>\r\n          <Switch>\r\n            <Route path={Routes.Home} exact component={Dashboard} />\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.User\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.User} exact component={UserPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Role\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Role} exact component={RolePage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Concern\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Concern} exact component={ConcernPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Ticket\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Ticket} exact component={TicketPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Classification\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route\r\n                path={Routes.Classification}\r\n                exact\r\n                component={ClassificationPage}\r\n              />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Personnel\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Personnel} exact component={PersonnelPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Office\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Office} exact component={OfficePage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Summary\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Summary} exact component={SummaryPage} />\r\n            )}\r\n          </Switch>\r\n          <div>\r\n            {showProfile && (\r\n              <ManageProfile onClose={() => setShowProfile(false)} />\r\n            )}\r\n          </div>\r\n        </BrowserRouter>\r\n      ) : (\r\n        <LoginPage />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { AuthorizeProvider } from './custom-hooks/authorize-provider';\nimport Dashboard from './pages/home-page';\nimport './styles/style.css';\nfunction App() {\n  return (\n    <AuthorizeProvider>\n      <Dashboard />\n    </AuthorizeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}